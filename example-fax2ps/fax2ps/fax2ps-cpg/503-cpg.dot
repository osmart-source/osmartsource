digraph "main" {  
"10286" [label = <(METHOD,main)<SUB>342</SUB>> ]
"10287" [label = <(PARAM,int argc)<SUB>342</SUB>> ]
"10288" [label = <(PARAM,char **argv)<SUB>342</SUB>> ]
"10289" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>343</SUB>> ]
"10290" [label = <(LOCAL,extern int optind: int)<SUB>345</SUB>> ]
"10291" [label = <(LOCAL,extern char* optarg: char)<SUB>346</SUB>> ]
"10292" [label = <(LOCAL,uint16_t* pages: uint16_t)<SUB>348</SUB>> ]
"10293" [label = <(LOCAL,uint16_t npages: uint16_t)<SUB>348</SUB>> ]
"10294" [label = <(LOCAL,uint16_t pageNumber: uint16_t)<SUB>348</SUB>> ]
"10295" [label = <(&lt;operator&gt;.assignment,*pages = NULL)<SUB>348</SUB>> ]
"10296" [label = <(IDENTIFIER,pages,*pages = NULL)<SUB>348</SUB>> ]
"10297" [label = <(NULL,NULL)<SUB>348</SUB>> ]
"10298" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)> ]
"10299" [label = <(&lt;operator&gt;.cast,(void *)0)<SUB>348</SUB>> ]
"10300" [label = <(UNKNOWN,void *,void *)<SUB>348</SUB>> ]
"10301" [label = <(LITERAL,0,(void *)0)<SUB>348</SUB>> ]
"10302" [label = <(&lt;operator&gt;.assignment,npages = 0)<SUB>348</SUB>> ]
"10303" [label = <(IDENTIFIER,npages,npages = 0)<SUB>348</SUB>> ]
"10304" [label = <(LITERAL,0,npages = 0)<SUB>348</SUB>> ]
"10305" [label = <(LOCAL,int c: int)<SUB>349</SUB>> ]
"10306" [label = <(LOCAL,int dowarnings: int)<SUB>349</SUB>> ]
"10307" [label = <(&lt;operator&gt;.assignment,dowarnings = 0)<SUB>349</SUB>> ]
"10308" [label = <(IDENTIFIER,dowarnings,dowarnings = 0)<SUB>349</SUB>> ]
"10309" [label = <(LITERAL,0,dowarnings = 0)<SUB>349</SUB>> ]
"10310" [label = <(LOCAL,TIFF* tif: TIFF)<SUB>350</SUB>> ]
"10311" [label = <(CONTROL_STRUCTURE,while ((c = getopt(argc, argv, &quot;l:p:x:y:W:H:wSh&quot;)) != -1),while ((c = getopt(argc, argv, &quot;l:p:x:y:W:H:wSh&quot;)) != -1))<SUB>352</SUB>> ]
"10312" [label = <(&lt;operator&gt;.notEquals,(c = getopt(argc, argv, &quot;l:p:x:y:W:H:wSh&quot;)) != -1)<SUB>352</SUB>> ]
"10313" [label = <(&lt;operator&gt;.assignment,c = getopt(argc, argv, &quot;l:p:x:y:W:H:wSh&quot;))<SUB>352</SUB>> ]
"10314" [label = <(IDENTIFIER,c,c = getopt(argc, argv, &quot;l:p:x:y:W:H:wSh&quot;))<SUB>352</SUB>> ]
"10315" [label = <(getopt,getopt(argc, argv, &quot;l:p:x:y:W:H:wSh&quot;))<SUB>352</SUB>> ]
"10316" [label = <(IDENTIFIER,argc,getopt(argc, argv, &quot;l:p:x:y:W:H:wSh&quot;))<SUB>352</SUB>> ]
"10317" [label = <(IDENTIFIER,argv,getopt(argc, argv, &quot;l:p:x:y:W:H:wSh&quot;))<SUB>352</SUB>> ]
"10318" [label = <(LITERAL,&quot;l:p:x:y:W:H:wSh&quot;,getopt(argc, argv, &quot;l:p:x:y:W:H:wSh&quot;))<SUB>352</SUB>> ]
"10319" [label = <(&lt;operator&gt;.minus,-1)<SUB>352</SUB>> ]
"10320" [label = <(LITERAL,1,-1)<SUB>352</SUB>> ]
"10321" [label = <(CONTROL_STRUCTURE,switch(c),switch(c))<SUB>353</SUB>> ]
"10322" [label = <(IDENTIFIER,c,switch(c))<SUB>353</SUB>> ]
"10323" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>354</SUB>> ]
"10324" [label = <(JUMP_TARGET,case)<SUB>355</SUB>> ]
"10325" [label = <(LITERAL,'H',&lt;empty&gt;)<SUB>355</SUB>> ]
"10326" [label = <(&lt;operator&gt;.assignment,pageHeight = (float)atof(optarg))<SUB>356</SUB>> ]
"10327" [label = <(IDENTIFIER,pageHeight,pageHeight = (float)atof(optarg))<SUB>356</SUB>> ]
"10328" [label = <(&lt;operator&gt;.cast,(float)atof(optarg))<SUB>356</SUB>> ]
"10329" [label = <(UNKNOWN,float,float)<SUB>356</SUB>> ]
"10330" [label = <(atof,atof(optarg))<SUB>356</SUB>> ]
"10331" [label = <(IDENTIFIER,optarg,atof(optarg))<SUB>356</SUB>> ]
"10332" [label = <(CONTROL_STRUCTURE,break;,break;)<SUB>357</SUB>> ]
"10333" [label = <(JUMP_TARGET,case)<SUB>358</SUB>> ]
"10334" [label = <(LITERAL,'S',&lt;empty&gt;)<SUB>358</SUB>> ]
"10335" [label = <(&lt;operator&gt;.assignment,scaleToPage = 1)<SUB>359</SUB>> ]
"10336" [label = <(IDENTIFIER,scaleToPage,scaleToPage = 1)<SUB>359</SUB>> ]
"10337" [label = <(LITERAL,1,scaleToPage = 1)<SUB>359</SUB>> ]
"10338" [label = <(CONTROL_STRUCTURE,break;,break;)<SUB>360</SUB>> ]
"10339" [label = <(JUMP_TARGET,case)<SUB>361</SUB>> ]
"10340" [label = <(LITERAL,'W',&lt;empty&gt;)<SUB>361</SUB>> ]
"10341" [label = <(&lt;operator&gt;.assignment,pageWidth = (float)atof(optarg))<SUB>362</SUB>> ]
"10342" [label = <(IDENTIFIER,pageWidth,pageWidth = (float)atof(optarg))<SUB>362</SUB>> ]
"10343" [label = <(&lt;operator&gt;.cast,(float)atof(optarg))<SUB>362</SUB>> ]
"10344" [label = <(UNKNOWN,float,float)<SUB>362</SUB>> ]
"10345" [label = <(atof,atof(optarg))<SUB>362</SUB>> ]
"10346" [label = <(IDENTIFIER,optarg,atof(optarg))<SUB>362</SUB>> ]
"10347" [label = <(CONTROL_STRUCTURE,break;,break;)<SUB>363</SUB>> ]
"10348" [label = <(JUMP_TARGET,case)<SUB>364</SUB>> ]
"10349" [label = <(LITERAL,'p',&lt;empty&gt;)<SUB>364</SUB>> ]
"10350" [label = <(&lt;operator&gt;.assignment,pageNumber = (uint16_t)atoi(optarg))<SUB>365</SUB>> ]
"10351" [label = <(IDENTIFIER,pageNumber,pageNumber = (uint16_t)atoi(optarg))<SUB>365</SUB>> ]
"10352" [label = <(&lt;operator&gt;.cast,(uint16_t)atoi(optarg))<SUB>365</SUB>> ]
"10353" [label = <(UNKNOWN,uint16_t,uint16_t)<SUB>365</SUB>> ]
"10354" [label = <(atoi,atoi(optarg))<SUB>365</SUB>> ]
"10355" [label = <(IDENTIFIER,optarg,atoi(optarg))<SUB>365</SUB>> ]
"10356" [label = <(CONTROL_STRUCTURE,if (pages &amp;&amp; 1),if (pages &amp;&amp; 1))<SUB>366</SUB>> ]
"10357" [label = <(&lt;operator&gt;.logicalAnd,pages &amp;&amp; 1)<SUB>366</SUB>> ]
"10358" [label = <(IDENTIFIER,pages,pages &amp;&amp; 1)<SUB>366</SUB>> ]
"10359" [label = <(LITERAL,1,pages &amp;&amp; 1)<SUB>366</SUB>> ]
"10360" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>367</SUB>> ]
"10361" [label = <(&lt;operator&gt;.assignment,pages = (uint16_t *)realloc(pages, (npages + 1) *\012                                                           sizeof(uint16_t)))<SUB>367</SUB>> ]
"10362" [label = <(IDENTIFIER,pages,pages = (uint16_t *)realloc(pages, (npages + 1) *\012                                                           sizeof(uint16_t)))<SUB>367</SUB>> ]
"10363" [label = <(&lt;operator&gt;.cast,(uint16_t *)realloc(pages, (npages + 1) *\012                                                           sizeof(uint16_t)))<SUB>367</SUB>> ]
"10364" [label = <(UNKNOWN,uint16_t *,uint16_t *)<SUB>367</SUB>> ]
"10365" [label = <(realloc,realloc(pages, (npages + 1) *\012                                                           sizeof(uint16_t)))<SUB>367</SUB>> ]
"10366" [label = <(IDENTIFIER,pages,realloc(pages, (npages + 1) *\012                                                           sizeof(uint16_t)))<SUB>367</SUB>> ]
"10367" [label = <(&lt;operator&gt;.multiplication,(npages + 1) *\012                                                           sizeof(uint16_t))<SUB>367</SUB>> ]
"10368" [label = <(&lt;operator&gt;.addition,npages + 1)<SUB>367</SUB>> ]
"10369" [label = <(IDENTIFIER,npages,npages + 1)<SUB>367</SUB>> ]
"10370" [label = <(LITERAL,1,npages + 1)<SUB>367</SUB>> ]
"10371" [label = <(&lt;operator&gt;.sizeOf,sizeof(uint16_t))<SUB>368</SUB>> ]
"10372" [label = <(IDENTIFIER,uint16_t,sizeof(uint16_t))<SUB>368</SUB>> ]
"10373" [label = <(CONTROL_STRUCTURE,else,else)<SUB>370</SUB>> ]
"10374" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>370</SUB>> ]
"10375" [label = <(&lt;operator&gt;.assignment,pages = (uint16_t *)malloc(sizeof(uint16_t)))<SUB>370</SUB>> ]
"10376" [label = <(IDENTIFIER,pages,pages = (uint16_t *)malloc(sizeof(uint16_t)))<SUB>370</SUB>> ]
"10377" [label = <(&lt;operator&gt;.cast,(uint16_t *)malloc(sizeof(uint16_t)))<SUB>370</SUB>> ]
"10378" [label = <(UNKNOWN,uint16_t *,uint16_t *)<SUB>370</SUB>> ]
"10379" [label = <(malloc,malloc(sizeof(uint16_t)))<SUB>370</SUB>> ]
"10380" [label = <(&lt;operator&gt;.sizeOf,sizeof(uint16_t))<SUB>370</SUB>> ]
"10381" [label = <(IDENTIFIER,uint16_t,sizeof(uint16_t))<SUB>370</SUB>> ]
"10382" [label = <(CONTROL_STRUCTURE,if (pages == NULL),if (pages == NULL))<SUB>371</SUB>> ]
"10383" [label = <(&lt;operator&gt;.equals,pages == NULL)<SUB>371</SUB>> ]
"10384" [label = <(IDENTIFIER,pages,pages == NULL)<SUB>371</SUB>> ]
"10385" [label = <(NULL,NULL)<SUB>371</SUB>> ]
"10386" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)> ]
"10387" [label = <(&lt;operator&gt;.cast,(void *)0)<SUB>371</SUB>> ]
"10388" [label = <(UNKNOWN,void *,void *)<SUB>371</SUB>> ]
"10389" [label = <(LITERAL,0,(void *)0)<SUB>371</SUB>> ]
"10390" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>372</SUB>> ]
"10391" [label = <(fprintf,fprintf(stderr, &quot;Out of memory\n&quot;))<SUB>373</SUB>> ]
"10392" [label = <(IDENTIFIER,stderr,fprintf(stderr, &quot;Out of memory\n&quot;))<SUB>373</SUB>> ]
"10393" [label = <(LITERAL,&quot;Out of memory\n&quot;,fprintf(stderr, &quot;Out of memory\n&quot;))<SUB>373</SUB>> ]
"10394" [label = <(exit,exit(EXIT_FAILURE))<SUB>374</SUB>> ]
"10395" [label = <(EXIT_FAILURE,EXIT_FAILURE)<SUB>374</SUB>> ]
"10396" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)> ]
"10397" [label = <(LITERAL,1,&lt;empty&gt;)<SUB>374</SUB>> ]
"10398" [label = <(&lt;operator&gt;.assignment,pages[npages++] = pageNumber)<SUB>376</SUB>> ]
"10399" [label = <(&lt;operator&gt;.indirectIndexAccess,pages[npages++])<SUB>376</SUB>> ]
"10400" [label = <(IDENTIFIER,pages,pages[npages++] = pageNumber)<SUB>376</SUB>> ]
"10401" [label = <(&lt;operator&gt;.postIncrement,npages++)<SUB>376</SUB>> ]
"10402" [label = <(IDENTIFIER,npages,npages++)<SUB>376</SUB>> ]
"10403" [label = <(IDENTIFIER,pageNumber,pages[npages++] = pageNumber)<SUB>376</SUB>> ]
"10404" [label = <(CONTROL_STRUCTURE,break;,break;)<SUB>377</SUB>> ]
"10405" [label = <(JUMP_TARGET,case)<SUB>378</SUB>> ]
"10406" [label = <(LITERAL,'w',&lt;empty&gt;)<SUB>378</SUB>> ]
"10407" [label = <(&lt;operator&gt;.assignment,dowarnings = 1)<SUB>379</SUB>> ]
"10408" [label = <(IDENTIFIER,dowarnings,dowarnings = 1)<SUB>379</SUB>> ]
"10409" [label = <(LITERAL,1,dowarnings = 1)<SUB>379</SUB>> ]
"10410" [label = <(CONTROL_STRUCTURE,break;,break;)<SUB>380</SUB>> ]
"10411" [label = <(JUMP_TARGET,case)<SUB>381</SUB>> ]
"10412" [label = <(LITERAL,'x',&lt;empty&gt;)<SUB>381</SUB>> ]
"10413" [label = <(&lt;operator&gt;.assignment,defxres = (float)atof(optarg))<SUB>382</SUB>> ]
"10414" [label = <(IDENTIFIER,defxres,defxres = (float)atof(optarg))<SUB>382</SUB>> ]
"10415" [label = <(&lt;operator&gt;.cast,(float)atof(optarg))<SUB>382</SUB>> ]
"10416" [label = <(UNKNOWN,float,float)<SUB>382</SUB>> ]
"10417" [label = <(atof,atof(optarg))<SUB>382</SUB>> ]
"10418" [label = <(IDENTIFIER,optarg,atof(optarg))<SUB>382</SUB>> ]
"10419" [label = <(CONTROL_STRUCTURE,break;,break;)<SUB>383</SUB>> ]
"10420" [label = <(JUMP_TARGET,case)<SUB>384</SUB>> ]
"10421" [label = <(LITERAL,'y',&lt;empty&gt;)<SUB>384</SUB>> ]
"10422" [label = <(&lt;operator&gt;.assignment,defyres = (float)atof(optarg))<SUB>385</SUB>> ]
"10423" [label = <(IDENTIFIER,defyres,defyres = (float)atof(optarg))<SUB>385</SUB>> ]
"10424" [label = <(&lt;operator&gt;.cast,(float)atof(optarg))<SUB>385</SUB>> ]
"10425" [label = <(UNKNOWN,float,float)<SUB>385</SUB>> ]
"10426" [label = <(atof,atof(optarg))<SUB>385</SUB>> ]
"10427" [label = <(IDENTIFIER,optarg,atof(optarg))<SUB>385</SUB>> ]
"10428" [label = <(CONTROL_STRUCTURE,break;,break;)<SUB>386</SUB>> ]
"10429" [label = <(JUMP_TARGET,case)<SUB>387</SUB>> ]
"10430" [label = <(LITERAL,'l',&lt;empty&gt;)<SUB>387</SUB>> ]
"10431" [label = <(&lt;operator&gt;.assignment,maxline = atoi(optarg))<SUB>388</SUB>> ]
"10432" [label = <(IDENTIFIER,maxline,maxline = atoi(optarg))<SUB>388</SUB>> ]
"10433" [label = <(atoi,atoi(optarg))<SUB>388</SUB>> ]
"10434" [label = <(IDENTIFIER,optarg,atoi(optarg))<SUB>388</SUB>> ]
"10435" [label = <(CONTROL_STRUCTURE,break;,break;)<SUB>389</SUB>> ]
"10436" [label = <(JUMP_TARGET,case)<SUB>390</SUB>> ]
"10437" [label = <(LITERAL,'h',&lt;empty&gt;)<SUB>390</SUB>> ]
"10438" [label = <(usage,usage(EXIT_SUCCESS))<SUB>391</SUB>> ]
"10439" [label = <(EXIT_SUCCESS,EXIT_SUCCESS)<SUB>391</SUB>> ]
"10440" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)> ]
"10441" [label = <(LITERAL,0,&lt;empty&gt;)<SUB>391</SUB>> ]
"10442" [label = <(CONTROL_STRUCTURE,break;,break;)<SUB>392</SUB>> ]
"10443" [label = <(JUMP_TARGET,case)<SUB>393</SUB>> ]
"10444" [label = <(LITERAL,'?',&lt;empty&gt;)<SUB>393</SUB>> ]
"10445" [label = <(usage,usage(EXIT_FAILURE))<SUB>394</SUB>> ]
"10446" [label = <(EXIT_FAILURE,EXIT_FAILURE)<SUB>394</SUB>> ]
"10447" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)> ]
"10448" [label = <(LITERAL,1,&lt;empty&gt;)<SUB>394</SUB>> ]
"10449" [label = <(CONTROL_STRUCTURE,if (npages &gt; 0),if (npages &gt; 0))<SUB>396</SUB>> ]
"10450" [label = <(&lt;operator&gt;.greaterThan,npages &gt; 0)<SUB>396</SUB>> ]
"10451" [label = <(IDENTIFIER,npages,npages &gt; 0)<SUB>396</SUB>> ]
"10452" [label = <(LITERAL,0,npages &gt; 0)<SUB>396</SUB>> ]
"10453" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>397</SUB>> ]
"10454" [label = <(qsort,qsort(pages, npages, sizeof(uint16_t), pcompar))<SUB>397</SUB>> ]
"10455" [label = <(IDENTIFIER,pages,qsort(pages, npages, sizeof(uint16_t), pcompar))<SUB>397</SUB>> ]
"10456" [label = <(IDENTIFIER,npages,qsort(pages, npages, sizeof(uint16_t), pcompar))<SUB>397</SUB>> ]
"10457" [label = <(&lt;operator&gt;.sizeOf,sizeof(uint16_t))<SUB>397</SUB>> ]
"10458" [label = <(IDENTIFIER,uint16_t,sizeof(uint16_t))<SUB>397</SUB>> ]
"10459" [label = <(IDENTIFIER,pcompar,qsort(pages, npages, sizeof(uint16_t), pcompar))<SUB>397</SUB>> ]
"10460" [label = <(CONTROL_STRUCTURE,if (!dowarnings),if (!dowarnings))<SUB>398</SUB>> ]
"10461" [label = <(&lt;operator&gt;.logicalNot,!dowarnings)<SUB>398</SUB>> ]
"10462" [label = <(IDENTIFIER,dowarnings,!dowarnings)<SUB>398</SUB>> ]
"10463" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>399</SUB>> ]
"10464" [label = <(TIFFSetWarningHandler,TIFFSetWarningHandler(0))<SUB>399</SUB>> ]
"10465" [label = <(LITERAL,0,TIFFSetWarningHandler(0))<SUB>399</SUB>> ]
"10466" [label = <(CONTROL_STRUCTURE,if (optind &lt; argc),if (optind &lt; argc))<SUB>400</SUB>> ]
"10467" [label = <(&lt;operator&gt;.lessThan,optind &lt; argc)<SUB>400</SUB>> ]
"10468" [label = <(IDENTIFIER,optind,optind &lt; argc)<SUB>400</SUB>> ]
"10469" [label = <(IDENTIFIER,argc,optind &lt; argc)<SUB>400</SUB>> ]
"10470" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>401</SUB>> ]
"10471" [label = <(CONTROL_STRUCTURE,do\012        {\012            tif = TIFFOpen(argv[optind], &quot;r&quot;);\012            if (tif &amp;&amp; 1)\012            {\012                fax2ps(tif, npages, pages, argv[optind]);\012                TIFFClose(tif);\012            }\012            else\012                fprintf(stderr, &quot;%s: Can not open, or not a TIFF file.\n&quot;,\012                        argv[optind]);\012        } while (++optind &lt; argc);,do\012        {\012            tif = TIFFOpen(argv[optind], &quot;r&quot;);\012            if (tif &amp;&amp; 1)\012            {\012                fax2ps(tif, npages, pages, argv[optind]);\012                TIFFClose(tif);\012            }\012            else\012                fprintf(stderr, &quot;%s: Can not open, or not a TIFF file.\n&quot;,\012                        argv[optind]);\012        } while (++optind &lt; argc);)<SUB>402</SUB>> ]
"10472" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>403</SUB>> ]
"10473" [label = <(&lt;operator&gt;.assignment,tif = TIFFOpen(argv[optind], &quot;r&quot;))<SUB>404</SUB>> ]
"10474" [label = <(IDENTIFIER,tif,tif = TIFFOpen(argv[optind], &quot;r&quot;))<SUB>404</SUB>> ]
"10475" [label = <(TIFFOpen,TIFFOpen(argv[optind], &quot;r&quot;))<SUB>404</SUB>> ]
"10476" [label = <(&lt;operator&gt;.indirectIndexAccess,argv[optind])<SUB>404</SUB>> ]
"10477" [label = <(IDENTIFIER,argv,TIFFOpen(argv[optind], &quot;r&quot;))<SUB>404</SUB>> ]
"10478" [label = <(IDENTIFIER,optind,TIFFOpen(argv[optind], &quot;r&quot;))<SUB>404</SUB>> ]
"10479" [label = <(LITERAL,&quot;r&quot;,TIFFOpen(argv[optind], &quot;r&quot;))<SUB>404</SUB>> ]
"10480" [label = <(CONTROL_STRUCTURE,if (tif &amp;&amp; 1),if (tif &amp;&amp; 1))<SUB>405</SUB>> ]
"10481" [label = <(&lt;operator&gt;.logicalAnd,tif &amp;&amp; 1)<SUB>405</SUB>> ]
"10482" [label = <(IDENTIFIER,tif,tif &amp;&amp; 1)<SUB>405</SUB>> ]
"10483" [label = <(LITERAL,1,tif &amp;&amp; 1)<SUB>405</SUB>> ]
"10484" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>406</SUB>> ]
"10485" [label = <(fax2ps,fax2ps(tif, npages, pages, argv[optind]))<SUB>407</SUB>> ]
"10486" [label = <(IDENTIFIER,tif,fax2ps(tif, npages, pages, argv[optind]))<SUB>407</SUB>> ]
"10487" [label = <(IDENTIFIER,npages,fax2ps(tif, npages, pages, argv[optind]))<SUB>407</SUB>> ]
"10488" [label = <(IDENTIFIER,pages,fax2ps(tif, npages, pages, argv[optind]))<SUB>407</SUB>> ]
"10489" [label = <(&lt;operator&gt;.indirectIndexAccess,argv[optind])<SUB>407</SUB>> ]
"10490" [label = <(IDENTIFIER,argv,fax2ps(tif, npages, pages, argv[optind]))<SUB>407</SUB>> ]
"10491" [label = <(IDENTIFIER,optind,fax2ps(tif, npages, pages, argv[optind]))<SUB>407</SUB>> ]
"10492" [label = <(TIFFClose,TIFFClose(tif))<SUB>408</SUB>> ]
"10493" [label = <(IDENTIFIER,tif,TIFFClose(tif))<SUB>408</SUB>> ]
"10494" [label = <(CONTROL_STRUCTURE,else,else)<SUB>411</SUB>> ]
"10495" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>411</SUB>> ]
"10496" [label = <(fprintf,fprintf(stderr, &quot;%s: Can not open, or not a TIFF file.\n&quot;,\012                        argv[optind]))<SUB>411</SUB>> ]
"10497" [label = <(IDENTIFIER,stderr,fprintf(stderr, &quot;%s: Can not open, or not a TIFF file.\n&quot;,\012                        argv[optind]))<SUB>411</SUB>> ]
"10498" [label = <(LITERAL,&quot;%s: Can not open, or not a TIFF file.\n&quot;,fprintf(stderr, &quot;%s: Can not open, or not a TIFF file.\n&quot;,\012                        argv[optind]))<SUB>411</SUB>> ]
"10499" [label = <(&lt;operator&gt;.indirectIndexAccess,argv[optind])<SUB>412</SUB>> ]
"10500" [label = <(IDENTIFIER,argv,fprintf(stderr, &quot;%s: Can not open, or not a TIFF file.\n&quot;,\012                        argv[optind]))<SUB>412</SUB>> ]
"10501" [label = <(IDENTIFIER,optind,fprintf(stderr, &quot;%s: Can not open, or not a TIFF file.\n&quot;,\012                        argv[optind]))<SUB>412</SUB>> ]
"10502" [label = <(&lt;operator&gt;.lessThan,++optind &lt; argc)<SUB>413</SUB>> ]
"10503" [label = <(&lt;operator&gt;.preIncrement,++optind)<SUB>413</SUB>> ]
"10504" [label = <(IDENTIFIER,optind,++optind)<SUB>413</SUB>> ]
"10505" [label = <(IDENTIFIER,argc,++optind &lt; argc)<SUB>413</SUB>> ]
"10506" [label = <(CONTROL_STRUCTURE,else,else)<SUB>416</SUB>> ]
"10507" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>416</SUB>> ]
"10508" [label = <(LOCAL,int n: int)<SUB>417</SUB>> ]
"10509" [label = <(LOCAL,FILE* fd: FILE)<SUB>418</SUB>> ]
"10510" [label = <(LOCAL,char[16384] buf: char[16384])<SUB>419</SUB>> ]
"10511" [label = <(&lt;operator&gt;.assignment,fd = tmpfile())<SUB>421</SUB>> ]
"10512" [label = <(IDENTIFIER,fd,fd = tmpfile())<SUB>421</SUB>> ]
"10513" [label = <(tmpfile,tmpfile())<SUB>421</SUB>> ]
"10514" [label = <(CONTROL_STRUCTURE,if (fd == NULL),if (fd == NULL))<SUB>422</SUB>> ]
"10515" [label = <(&lt;operator&gt;.equals,fd == NULL)<SUB>422</SUB>> ]
"10516" [label = <(IDENTIFIER,fd,fd == NULL)<SUB>422</SUB>> ]
"10517" [label = <(NULL,NULL)<SUB>422</SUB>> ]
"10518" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)> ]
"10519" [label = <(&lt;operator&gt;.cast,(void *)0)<SUB>422</SUB>> ]
"10520" [label = <(UNKNOWN,void *,void *)<SUB>422</SUB>> ]
"10521" [label = <(LITERAL,0,(void *)0)<SUB>422</SUB>> ]
"10522" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>423</SUB>> ]
"10523" [label = <(fprintf,fprintf(stderr, &quot;Could not obtain temporary file.\n&quot;))<SUB>424</SUB>> ]
"10524" [label = <(IDENTIFIER,stderr,fprintf(stderr, &quot;Could not obtain temporary file.\n&quot;))<SUB>424</SUB>> ]
"10525" [label = <(LITERAL,&quot;Could not obtain temporary file.\n&quot;,fprintf(stderr, &quot;Could not obtain temporary file.\n&quot;))<SUB>424</SUB>> ]
"10526" [label = <(exit,exit(EXIT_FAILURE))<SUB>425</SUB>> ]
"10527" [label = <(EXIT_FAILURE,EXIT_FAILURE)<SUB>425</SUB>> ]
"10528" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)> ]
"10529" [label = <(LITERAL,1,&lt;empty&gt;)<SUB>425</SUB>> ]
"10530" [label = <(CONTROL_STRUCTURE,while ((n = read(fileno(stdin), buf, sizeof(buf))) &gt; 0),while ((n = read(fileno(stdin), buf, sizeof(buf))) &gt; 0))<SUB>430</SUB>> ]
"10531" [label = <(&lt;operator&gt;.greaterThan,(n = read(fileno(stdin), buf, sizeof(buf))) &gt; 0)<SUB>430</SUB>> ]
"10532" [label = <(&lt;operator&gt;.assignment,n = read(fileno(stdin), buf, sizeof(buf)))<SUB>430</SUB>> ]
"10533" [label = <(IDENTIFIER,n,n = read(fileno(stdin), buf, sizeof(buf)))<SUB>430</SUB>> ]
"10534" [label = <(read,read(fileno(stdin), buf, sizeof(buf)))<SUB>430</SUB>> ]
"10535" [label = <(fileno,fileno(stdin))<SUB>430</SUB>> ]
"10536" [label = <(IDENTIFIER,stdin,fileno(stdin))<SUB>430</SUB>> ]
"10537" [label = <(IDENTIFIER,buf,read(fileno(stdin), buf, sizeof(buf)))<SUB>430</SUB>> ]
"10538" [label = <(&lt;operator&gt;.sizeOf,sizeof(buf))<SUB>430</SUB>> ]
"10539" [label = <(IDENTIFIER,buf,sizeof(buf))<SUB>430</SUB>> ]
"10540" [label = <(LITERAL,0,(n = read(fileno(stdin), buf, sizeof(buf))) &gt; 0)<SUB>430</SUB>> ]
"10541" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>431</SUB>> ]
"10542" [label = <(CONTROL_STRUCTURE,if (write(fileno(fd), buf, n) != n),if (write(fileno(fd), buf, n) != n))<SUB>432</SUB>> ]
"10543" [label = <(&lt;operator&gt;.notEquals,write(fileno(fd), buf, n) != n)<SUB>432</SUB>> ]
"10544" [label = <(write,write(fileno(fd), buf, n))<SUB>432</SUB>> ]
"10545" [label = <(fileno,fileno(fd))<SUB>432</SUB>> ]
"10546" [label = <(IDENTIFIER,fd,fileno(fd))<SUB>432</SUB>> ]
"10547" [label = <(IDENTIFIER,buf,write(fileno(fd), buf, n))<SUB>432</SUB>> ]
"10548" [label = <(IDENTIFIER,n,write(fileno(fd), buf, n))<SUB>432</SUB>> ]
"10549" [label = <(IDENTIFIER,n,write(fileno(fd), buf, n) != n)<SUB>432</SUB>> ]
"10550" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>433</SUB>> ]
"10551" [label = <(fclose,fclose(fd))<SUB>434</SUB>> ]
"10552" [label = <(IDENTIFIER,fd,fclose(fd))<SUB>434</SUB>> ]
"10553" [label = <(fprintf,fprintf(stderr, &quot;Could not copy stdin to temporary file.\n&quot;))<SUB>435</SUB>> ]
"10554" [label = <(IDENTIFIER,stderr,fprintf(stderr, &quot;Could not copy stdin to temporary file.\n&quot;))<SUB>435</SUB>> ]
"10555" [label = <(LITERAL,&quot;Could not copy stdin to temporary file.\n&quot;,fprintf(stderr, &quot;Could not copy stdin to temporary file.\n&quot;))<SUB>435</SUB>> ]
"10556" [label = <(exit,exit(EXIT_FAILURE))<SUB>436</SUB>> ]
"10557" [label = <(EXIT_FAILURE,EXIT_FAILURE)<SUB>436</SUB>> ]
"10558" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)> ]
"10559" [label = <(LITERAL,1,&lt;empty&gt;)<SUB>436</SUB>> ]
"10560" [label = <(_TIFF_lseek_f,_TIFF_lseek_f(fileno(fd), 0, SEEK_SET))<SUB>439</SUB>> ]
"10561" [label = <(fileno,fileno(fd))<SUB>439</SUB>> ]
"10562" [label = <(IDENTIFIER,fd,fileno(fd))<SUB>439</SUB>> ]
"10563" [label = <(LITERAL,0,_TIFF_lseek_f(fileno(fd), 0, SEEK_SET))<SUB>439</SUB>> ]
"10564" [label = <(SEEK_SET,SEEK_SET)<SUB>439</SUB>> ]
"10565" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)> ]
"10566" [label = <(LITERAL,0,&lt;empty&gt;)<SUB>439</SUB>> ]
"10567" [label = <(&lt;operator&gt;.assignment,tif = TIFFFdOpen(fileno(fd), &quot;temp&quot;, &quot;r&quot;))<SUB>443</SUB>> ]
"10568" [label = <(IDENTIFIER,tif,tif = TIFFFdOpen(fileno(fd), &quot;temp&quot;, &quot;r&quot;))<SUB>443</SUB>> ]
"10569" [label = <(TIFFFdOpen,TIFFFdOpen(fileno(fd), &quot;temp&quot;, &quot;r&quot;))<SUB>443</SUB>> ]
"10570" [label = <(fileno,fileno(fd))<SUB>443</SUB>> ]
"10571" [label = <(IDENTIFIER,fd,fileno(fd))<SUB>443</SUB>> ]
"10572" [label = <(LITERAL,&quot;temp&quot;,TIFFFdOpen(fileno(fd), &quot;temp&quot;, &quot;r&quot;))<SUB>443</SUB>> ]
"10573" [label = <(LITERAL,&quot;r&quot;,TIFFFdOpen(fileno(fd), &quot;temp&quot;, &quot;r&quot;))<SUB>443</SUB>> ]
"10574" [label = <(CONTROL_STRUCTURE,if (tif &amp;&amp; 1),if (tif &amp;&amp; 1))<SUB>445</SUB>> ]
"10575" [label = <(&lt;operator&gt;.logicalAnd,tif &amp;&amp; 1)<SUB>445</SUB>> ]
"10576" [label = <(IDENTIFIER,tif,tif &amp;&amp; 1)<SUB>445</SUB>> ]
"10577" [label = <(LITERAL,1,tif &amp;&amp; 1)<SUB>445</SUB>> ]
"10578" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>446</SUB>> ]
"10579" [label = <(fax2ps,fax2ps(tif, npages, pages, &quot;&lt;stdin&gt;&quot;))<SUB>447</SUB>> ]
"10580" [label = <(IDENTIFIER,tif,fax2ps(tif, npages, pages, &quot;&lt;stdin&gt;&quot;))<SUB>447</SUB>> ]
"10581" [label = <(IDENTIFIER,npages,fax2ps(tif, npages, pages, &quot;&lt;stdin&gt;&quot;))<SUB>447</SUB>> ]
"10582" [label = <(IDENTIFIER,pages,fax2ps(tif, npages, pages, &quot;&lt;stdin&gt;&quot;))<SUB>447</SUB>> ]
"10583" [label = <(LITERAL,&quot;&lt;stdin&gt;&quot;,fax2ps(tif, npages, pages, &quot;&lt;stdin&gt;&quot;))<SUB>447</SUB>> ]
"10584" [label = <(TIFFClose,TIFFClose(tif))<SUB>448</SUB>> ]
"10585" [label = <(IDENTIFIER,tif,TIFFClose(tif))<SUB>448</SUB>> ]
"10586" [label = <(CONTROL_STRUCTURE,else,else)<SUB>451</SUB>> ]
"10587" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>451</SUB>> ]
"10588" [label = <(fprintf,fprintf(stderr, &quot;Can not open, or not a TIFF file.\n&quot;))<SUB>451</SUB>> ]
"10589" [label = <(IDENTIFIER,stderr,fprintf(stderr, &quot;Can not open, or not a TIFF file.\n&quot;))<SUB>451</SUB>> ]
"10590" [label = <(LITERAL,&quot;Can not open, or not a TIFF file.\n&quot;,fprintf(stderr, &quot;Can not open, or not a TIFF file.\n&quot;))<SUB>451</SUB>> ]
"10591" [label = <(fclose,fclose(fd))<SUB>452</SUB>> ]
"10592" [label = <(IDENTIFIER,fd,fclose(fd))<SUB>452</SUB>> ]
"10593" [label = <(printf,printf(&quot;%%%%Trailer\n&quot;))<SUB>454</SUB>> ]
"10594" [label = <(LITERAL,&quot;%%%%Trailer\n&quot;,printf(&quot;%%%%Trailer\n&quot;))<SUB>454</SUB>> ]
"10595" [label = <(printf,printf(&quot;%%%%Pages: %u\n&quot;, totalPages))<SUB>455</SUB>> ]
"10596" [label = <(LITERAL,&quot;%%%%Pages: %u\n&quot;,printf(&quot;%%%%Pages: %u\n&quot;, totalPages))<SUB>455</SUB>> ]
"10597" [label = <(IDENTIFIER,totalPages,printf(&quot;%%%%Pages: %u\n&quot;, totalPages))<SUB>455</SUB>> ]
"10598" [label = <(printf,printf(&quot;%%%%EOF\n&quot;))<SUB>456</SUB>> ]
"10599" [label = <(LITERAL,&quot;%%%%EOF\n&quot;,printf(&quot;%%%%EOF\n&quot;))<SUB>456</SUB>> ]
"10600" [label = <(RETURN,return (EXIT_SUCCESS);,return (EXIT_SUCCESS);)<SUB>458</SUB>> ]
"10601" [label = <(EXIT_SUCCESS,EXIT_SUCCESS)<SUB>458</SUB>> ]
"10602" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)> ]
"10603" [label = <(LITERAL,0,&lt;empty&gt;)<SUB>458</SUB>> ]
"10604" [label = <(METHOD_RETURN,int)<SUB>342</SUB>> ]
  "10286" -> "10287"  [ label = "AST: "] 
  "10286" -> "10288"  [ label = "AST: "] 
  "10286" -> "10289"  [ label = "AST: "] 
  "10286" -> "10604"  [ label = "AST: "] 
  "10289" -> "10290"  [ label = "AST: "] 
  "10289" -> "10291"  [ label = "AST: "] 
  "10289" -> "10292"  [ label = "AST: "] 
  "10289" -> "10293"  [ label = "AST: "] 
  "10289" -> "10294"  [ label = "AST: "] 
  "10289" -> "10295"  [ label = "AST: "] 
  "10289" -> "10302"  [ label = "AST: "] 
  "10289" -> "10305"  [ label = "AST: "] 
  "10289" -> "10306"  [ label = "AST: "] 
  "10289" -> "10307"  [ label = "AST: "] 
  "10289" -> "10310"  [ label = "AST: "] 
  "10289" -> "10311"  [ label = "AST: "] 
  "10289" -> "10449"  [ label = "AST: "] 
  "10289" -> "10460"  [ label = "AST: "] 
  "10289" -> "10466"  [ label = "AST: "] 
  "10289" -> "10593"  [ label = "AST: "] 
  "10289" -> "10595"  [ label = "AST: "] 
  "10289" -> "10598"  [ label = "AST: "] 
  "10289" -> "10600"  [ label = "AST: "] 
  "10295" -> "10296"  [ label = "AST: "] 
  "10295" -> "10297"  [ label = "AST: "] 
  "10297" -> "10298"  [ label = "AST: "] 
  "10298" -> "10299"  [ label = "AST: "] 
  "10299" -> "10300"  [ label = "AST: "] 
  "10299" -> "10301"  [ label = "AST: "] 
  "10302" -> "10303"  [ label = "AST: "] 
  "10302" -> "10304"  [ label = "AST: "] 
  "10307" -> "10308"  [ label = "AST: "] 
  "10307" -> "10309"  [ label = "AST: "] 
  "10311" -> "10312"  [ label = "AST: "] 
  "10311" -> "10321"  [ label = "AST: "] 
  "10312" -> "10313"  [ label = "AST: "] 
  "10312" -> "10319"  [ label = "AST: "] 
  "10313" -> "10314"  [ label = "AST: "] 
  "10313" -> "10315"  [ label = "AST: "] 
  "10315" -> "10316"  [ label = "AST: "] 
  "10315" -> "10317"  [ label = "AST: "] 
  "10315" -> "10318"  [ label = "AST: "] 
  "10319" -> "10320"  [ label = "AST: "] 
  "10321" -> "10322"  [ label = "AST: "] 
  "10321" -> "10323"  [ label = "AST: "] 
  "10323" -> "10324"  [ label = "AST: "] 
  "10323" -> "10325"  [ label = "AST: "] 
  "10323" -> "10326"  [ label = "AST: "] 
  "10323" -> "10332"  [ label = "AST: "] 
  "10323" -> "10333"  [ label = "AST: "] 
  "10323" -> "10334"  [ label = "AST: "] 
  "10323" -> "10335"  [ label = "AST: "] 
  "10323" -> "10338"  [ label = "AST: "] 
  "10323" -> "10339"  [ label = "AST: "] 
  "10323" -> "10340"  [ label = "AST: "] 
  "10323" -> "10341"  [ label = "AST: "] 
  "10323" -> "10347"  [ label = "AST: "] 
  "10323" -> "10348"  [ label = "AST: "] 
  "10323" -> "10349"  [ label = "AST: "] 
  "10323" -> "10350"  [ label = "AST: "] 
  "10323" -> "10356"  [ label = "AST: "] 
  "10323" -> "10382"  [ label = "AST: "] 
  "10323" -> "10398"  [ label = "AST: "] 
  "10323" -> "10404"  [ label = "AST: "] 
  "10323" -> "10405"  [ label = "AST: "] 
  "10323" -> "10406"  [ label = "AST: "] 
  "10323" -> "10407"  [ label = "AST: "] 
  "10323" -> "10410"  [ label = "AST: "] 
  "10323" -> "10411"  [ label = "AST: "] 
  "10323" -> "10412"  [ label = "AST: "] 
  "10323" -> "10413"  [ label = "AST: "] 
  "10323" -> "10419"  [ label = "AST: "] 
  "10323" -> "10420"  [ label = "AST: "] 
  "10323" -> "10421"  [ label = "AST: "] 
  "10323" -> "10422"  [ label = "AST: "] 
  "10323" -> "10428"  [ label = "AST: "] 
  "10323" -> "10429"  [ label = "AST: "] 
  "10323" -> "10430"  [ label = "AST: "] 
  "10323" -> "10431"  [ label = "AST: "] 
  "10323" -> "10435"  [ label = "AST: "] 
  "10323" -> "10436"  [ label = "AST: "] 
  "10323" -> "10437"  [ label = "AST: "] 
  "10323" -> "10438"  [ label = "AST: "] 
  "10323" -> "10442"  [ label = "AST: "] 
  "10323" -> "10443"  [ label = "AST: "] 
  "10323" -> "10444"  [ label = "AST: "] 
  "10323" -> "10445"  [ label = "AST: "] 
  "10326" -> "10327"  [ label = "AST: "] 
  "10326" -> "10328"  [ label = "AST: "] 
  "10328" -> "10329"  [ label = "AST: "] 
  "10328" -> "10330"  [ label = "AST: "] 
  "10330" -> "10331"  [ label = "AST: "] 
  "10335" -> "10336"  [ label = "AST: "] 
  "10335" -> "10337"  [ label = "AST: "] 
  "10341" -> "10342"  [ label = "AST: "] 
  "10341" -> "10343"  [ label = "AST: "] 
  "10343" -> "10344"  [ label = "AST: "] 
  "10343" -> "10345"  [ label = "AST: "] 
  "10345" -> "10346"  [ label = "AST: "] 
  "10350" -> "10351"  [ label = "AST: "] 
  "10350" -> "10352"  [ label = "AST: "] 
  "10352" -> "10353"  [ label = "AST: "] 
  "10352" -> "10354"  [ label = "AST: "] 
  "10354" -> "10355"  [ label = "AST: "] 
  "10356" -> "10357"  [ label = "AST: "] 
  "10356" -> "10360"  [ label = "AST: "] 
  "10356" -> "10373"  [ label = "AST: "] 
  "10357" -> "10358"  [ label = "AST: "] 
  "10357" -> "10359"  [ label = "AST: "] 
  "10360" -> "10361"  [ label = "AST: "] 
  "10361" -> "10362"  [ label = "AST: "] 
  "10361" -> "10363"  [ label = "AST: "] 
  "10363" -> "10364"  [ label = "AST: "] 
  "10363" -> "10365"  [ label = "AST: "] 
  "10365" -> "10366"  [ label = "AST: "] 
  "10365" -> "10367"  [ label = "AST: "] 
  "10367" -> "10368"  [ label = "AST: "] 
  "10367" -> "10371"  [ label = "AST: "] 
  "10368" -> "10369"  [ label = "AST: "] 
  "10368" -> "10370"  [ label = "AST: "] 
  "10371" -> "10372"  [ label = "AST: "] 
  "10373" -> "10374"  [ label = "AST: "] 
  "10374" -> "10375"  [ label = "AST: "] 
  "10375" -> "10376"  [ label = "AST: "] 
  "10375" -> "10377"  [ label = "AST: "] 
  "10377" -> "10378"  [ label = "AST: "] 
  "10377" -> "10379"  [ label = "AST: "] 
  "10379" -> "10380"  [ label = "AST: "] 
  "10380" -> "10381"  [ label = "AST: "] 
  "10382" -> "10383"  [ label = "AST: "] 
  "10382" -> "10390"  [ label = "AST: "] 
  "10383" -> "10384"  [ label = "AST: "] 
  "10383" -> "10385"  [ label = "AST: "] 
  "10385" -> "10386"  [ label = "AST: "] 
  "10386" -> "10387"  [ label = "AST: "] 
  "10387" -> "10388"  [ label = "AST: "] 
  "10387" -> "10389"  [ label = "AST: "] 
  "10390" -> "10391"  [ label = "AST: "] 
  "10390" -> "10394"  [ label = "AST: "] 
  "10391" -> "10392"  [ label = "AST: "] 
  "10391" -> "10393"  [ label = "AST: "] 
  "10394" -> "10395"  [ label = "AST: "] 
  "10395" -> "10396"  [ label = "AST: "] 
  "10396" -> "10397"  [ label = "AST: "] 
  "10398" -> "10399"  [ label = "AST: "] 
  "10398" -> "10403"  [ label = "AST: "] 
  "10399" -> "10400"  [ label = "AST: "] 
  "10399" -> "10401"  [ label = "AST: "] 
  "10401" -> "10402"  [ label = "AST: "] 
  "10407" -> "10408"  [ label = "AST: "] 
  "10407" -> "10409"  [ label = "AST: "] 
  "10413" -> "10414"  [ label = "AST: "] 
  "10413" -> "10415"  [ label = "AST: "] 
  "10415" -> "10416"  [ label = "AST: "] 
  "10415" -> "10417"  [ label = "AST: "] 
  "10417" -> "10418"  [ label = "AST: "] 
  "10422" -> "10423"  [ label = "AST: "] 
  "10422" -> "10424"  [ label = "AST: "] 
  "10424" -> "10425"  [ label = "AST: "] 
  "10424" -> "10426"  [ label = "AST: "] 
  "10426" -> "10427"  [ label = "AST: "] 
  "10431" -> "10432"  [ label = "AST: "] 
  "10431" -> "10433"  [ label = "AST: "] 
  "10433" -> "10434"  [ label = "AST: "] 
  "10438" -> "10439"  [ label = "AST: "] 
  "10439" -> "10440"  [ label = "AST: "] 
  "10440" -> "10441"  [ label = "AST: "] 
  "10445" -> "10446"  [ label = "AST: "] 
  "10446" -> "10447"  [ label = "AST: "] 
  "10447" -> "10448"  [ label = "AST: "] 
  "10449" -> "10450"  [ label = "AST: "] 
  "10449" -> "10453"  [ label = "AST: "] 
  "10450" -> "10451"  [ label = "AST: "] 
  "10450" -> "10452"  [ label = "AST: "] 
  "10453" -> "10454"  [ label = "AST: "] 
  "10454" -> "10455"  [ label = "AST: "] 
  "10454" -> "10456"  [ label = "AST: "] 
  "10454" -> "10457"  [ label = "AST: "] 
  "10454" -> "10459"  [ label = "AST: "] 
  "10457" -> "10458"  [ label = "AST: "] 
  "10460" -> "10461"  [ label = "AST: "] 
  "10460" -> "10463"  [ label = "AST: "] 
  "10461" -> "10462"  [ label = "AST: "] 
  "10463" -> "10464"  [ label = "AST: "] 
  "10464" -> "10465"  [ label = "AST: "] 
  "10466" -> "10467"  [ label = "AST: "] 
  "10466" -> "10470"  [ label = "AST: "] 
  "10466" -> "10506"  [ label = "AST: "] 
  "10467" -> "10468"  [ label = "AST: "] 
  "10467" -> "10469"  [ label = "AST: "] 
  "10470" -> "10471"  [ label = "AST: "] 
  "10471" -> "10472"  [ label = "AST: "] 
  "10471" -> "10502"  [ label = "AST: "] 
  "10472" -> "10473"  [ label = "AST: "] 
  "10472" -> "10480"  [ label = "AST: "] 
  "10473" -> "10474"  [ label = "AST: "] 
  "10473" -> "10475"  [ label = "AST: "] 
  "10475" -> "10476"  [ label = "AST: "] 
  "10475" -> "10479"  [ label = "AST: "] 
  "10476" -> "10477"  [ label = "AST: "] 
  "10476" -> "10478"  [ label = "AST: "] 
  "10480" -> "10481"  [ label = "AST: "] 
  "10480" -> "10484"  [ label = "AST: "] 
  "10480" -> "10494"  [ label = "AST: "] 
  "10481" -> "10482"  [ label = "AST: "] 
  "10481" -> "10483"  [ label = "AST: "] 
  "10484" -> "10485"  [ label = "AST: "] 
  "10484" -> "10492"  [ label = "AST: "] 
  "10485" -> "10486"  [ label = "AST: "] 
  "10485" -> "10487"  [ label = "AST: "] 
  "10485" -> "10488"  [ label = "AST: "] 
  "10485" -> "10489"  [ label = "AST: "] 
  "10489" -> "10490"  [ label = "AST: "] 
  "10489" -> "10491"  [ label = "AST: "] 
  "10492" -> "10493"  [ label = "AST: "] 
  "10494" -> "10495"  [ label = "AST: "] 
  "10495" -> "10496"  [ label = "AST: "] 
  "10496" -> "10497"  [ label = "AST: "] 
  "10496" -> "10498"  [ label = "AST: "] 
  "10496" -> "10499"  [ label = "AST: "] 
  "10499" -> "10500"  [ label = "AST: "] 
  "10499" -> "10501"  [ label = "AST: "] 
  "10502" -> "10503"  [ label = "AST: "] 
  "10502" -> "10505"  [ label = "AST: "] 
  "10503" -> "10504"  [ label = "AST: "] 
  "10506" -> "10507"  [ label = "AST: "] 
  "10507" -> "10508"  [ label = "AST: "] 
  "10507" -> "10509"  [ label = "AST: "] 
  "10507" -> "10510"  [ label = "AST: "] 
  "10507" -> "10511"  [ label = "AST: "] 
  "10507" -> "10514"  [ label = "AST: "] 
  "10507" -> "10530"  [ label = "AST: "] 
  "10507" -> "10560"  [ label = "AST: "] 
  "10507" -> "10567"  [ label = "AST: "] 
  "10507" -> "10574"  [ label = "AST: "] 
  "10507" -> "10591"  [ label = "AST: "] 
  "10511" -> "10512"  [ label = "AST: "] 
  "10511" -> "10513"  [ label = "AST: "] 
  "10514" -> "10515"  [ label = "AST: "] 
  "10514" -> "10522"  [ label = "AST: "] 
  "10515" -> "10516"  [ label = "AST: "] 
  "10515" -> "10517"  [ label = "AST: "] 
  "10517" -> "10518"  [ label = "AST: "] 
  "10518" -> "10519"  [ label = "AST: "] 
  "10519" -> "10520"  [ label = "AST: "] 
  "10519" -> "10521"  [ label = "AST: "] 
  "10522" -> "10523"  [ label = "AST: "] 
  "10522" -> "10526"  [ label = "AST: "] 
  "10523" -> "10524"  [ label = "AST: "] 
  "10523" -> "10525"  [ label = "AST: "] 
  "10526" -> "10527"  [ label = "AST: "] 
  "10527" -> "10528"  [ label = "AST: "] 
  "10528" -> "10529"  [ label = "AST: "] 
  "10530" -> "10531"  [ label = "AST: "] 
  "10530" -> "10541"  [ label = "AST: "] 
  "10531" -> "10532"  [ label = "AST: "] 
  "10531" -> "10540"  [ label = "AST: "] 
  "10532" -> "10533"  [ label = "AST: "] 
  "10532" -> "10534"  [ label = "AST: "] 
  "10534" -> "10535"  [ label = "AST: "] 
  "10534" -> "10537"  [ label = "AST: "] 
  "10534" -> "10538"  [ label = "AST: "] 
  "10535" -> "10536"  [ label = "AST: "] 
  "10538" -> "10539"  [ label = "AST: "] 
  "10541" -> "10542"  [ label = "AST: "] 
  "10542" -> "10543"  [ label = "AST: "] 
  "10542" -> "10550"  [ label = "AST: "] 
  "10543" -> "10544"  [ label = "AST: "] 
  "10543" -> "10549"  [ label = "AST: "] 
  "10544" -> "10545"  [ label = "AST: "] 
  "10544" -> "10547"  [ label = "AST: "] 
  "10544" -> "10548"  [ label = "AST: "] 
  "10545" -> "10546"  [ label = "AST: "] 
  "10550" -> "10551"  [ label = "AST: "] 
  "10550" -> "10553"  [ label = "AST: "] 
  "10550" -> "10556"  [ label = "AST: "] 
  "10551" -> "10552"  [ label = "AST: "] 
  "10553" -> "10554"  [ label = "AST: "] 
  "10553" -> "10555"  [ label = "AST: "] 
  "10556" -> "10557"  [ label = "AST: "] 
  "10557" -> "10558"  [ label = "AST: "] 
  "10558" -> "10559"  [ label = "AST: "] 
  "10560" -> "10561"  [ label = "AST: "] 
  "10560" -> "10563"  [ label = "AST: "] 
  "10560" -> "10564"  [ label = "AST: "] 
  "10561" -> "10562"  [ label = "AST: "] 
  "10564" -> "10565"  [ label = "AST: "] 
  "10565" -> "10566"  [ label = "AST: "] 
  "10567" -> "10568"  [ label = "AST: "] 
  "10567" -> "10569"  [ label = "AST: "] 
  "10569" -> "10570"  [ label = "AST: "] 
  "10569" -> "10572"  [ label = "AST: "] 
  "10569" -> "10573"  [ label = "AST: "] 
  "10570" -> "10571"  [ label = "AST: "] 
  "10574" -> "10575"  [ label = "AST: "] 
  "10574" -> "10578"  [ label = "AST: "] 
  "10574" -> "10586"  [ label = "AST: "] 
  "10575" -> "10576"  [ label = "AST: "] 
  "10575" -> "10577"  [ label = "AST: "] 
  "10578" -> "10579"  [ label = "AST: "] 
  "10578" -> "10584"  [ label = "AST: "] 
  "10579" -> "10580"  [ label = "AST: "] 
  "10579" -> "10581"  [ label = "AST: "] 
  "10579" -> "10582"  [ label = "AST: "] 
  "10579" -> "10583"  [ label = "AST: "] 
  "10584" -> "10585"  [ label = "AST: "] 
  "10586" -> "10587"  [ label = "AST: "] 
  "10587" -> "10588"  [ label = "AST: "] 
  "10588" -> "10589"  [ label = "AST: "] 
  "10588" -> "10590"  [ label = "AST: "] 
  "10591" -> "10592"  [ label = "AST: "] 
  "10593" -> "10594"  [ label = "AST: "] 
  "10595" -> "10596"  [ label = "AST: "] 
  "10595" -> "10597"  [ label = "AST: "] 
  "10598" -> "10599"  [ label = "AST: "] 
  "10600" -> "10601"  [ label = "AST: "] 
  "10601" -> "10602"  [ label = "AST: "] 
  "10602" -> "10603"  [ label = "AST: "] 
  "10295" -> "10302"  [ label = "CFG: "] 
  "10302" -> "10307"  [ label = "CFG: "] 
  "10307" -> "10315"  [ label = "CFG: "] 
  "10593" -> "10595"  [ label = "CFG: "] 
  "10595" -> "10598"  [ label = "CFG: "] 
  "10598" -> "10601"  [ label = "CFG: "] 
  "10600" -> "10604"  [ label = "CFG: "] 
  "10297" -> "10300"  [ label = "CFG: "] 
  "10297" -> "10295"  [ label = "CFG: "] 
  "10312" -> "10315"  [ label = "CFG: "] 
  "10312" -> "10329"  [ label = "CFG: "] 
  "10312" -> "10335"  [ label = "CFG: "] 
  "10312" -> "10344"  [ label = "CFG: "] 
  "10312" -> "10353"  [ label = "CFG: "] 
  "10312" -> "10407"  [ label = "CFG: "] 
  "10312" -> "10416"  [ label = "CFG: "] 
  "10312" -> "10425"  [ label = "CFG: "] 
  "10312" -> "10433"  [ label = "CFG: "] 
  "10312" -> "10439"  [ label = "CFG: "] 
  "10312" -> "10446"  [ label = "CFG: "] 
  "10312" -> "10450"  [ label = "CFG: "] 
  "10450" -> "10457"  [ label = "CFG: "] 
  "10450" -> "10461"  [ label = "CFG: "] 
  "10461" -> "10464"  [ label = "CFG: "] 
  "10461" -> "10467"  [ label = "CFG: "] 
  "10467" -> "10476"  [ label = "CFG: "] 
  "10467" -> "10513"  [ label = "CFG: "] 
  "10601" -> "10600"  [ label = "CFG: "] 
  "10313" -> "10319"  [ label = "CFG: "] 
  "10319" -> "10312"  [ label = "CFG: "] 
  "10454" -> "10461"  [ label = "CFG: "] 
  "10464" -> "10467"  [ label = "CFG: "] 
  "10299" -> "10295"  [ label = "CFG: "] 
  "10315" -> "10313"  [ label = "CFG: "] 
  "10326" -> "10315"  [ label = "CFG: "] 
  "10335" -> "10315"  [ label = "CFG: "] 
  "10341" -> "10315"  [ label = "CFG: "] 
  "10350" -> "10357"  [ label = "CFG: "] 
  "10398" -> "10315"  [ label = "CFG: "] 
  "10407" -> "10315"  [ label = "CFG: "] 
  "10413" -> "10315"  [ label = "CFG: "] 
  "10422" -> "10315"  [ label = "CFG: "] 
  "10431" -> "10315"  [ label = "CFG: "] 
  "10438" -> "10315"  [ label = "CFG: "] 
  "10445" -> "10315"  [ label = "CFG: "] 
  "10457" -> "10454"  [ label = "CFG: "] 
  "10502" -> "10476"  [ label = "CFG: "] 
  "10502" -> "10593"  [ label = "CFG: "] 
  "10511" -> "10517"  [ label = "CFG: "] 
  "10560" -> "10570"  [ label = "CFG: "] 
  "10567" -> "10575"  [ label = "CFG: "] 
  "10591" -> "10593"  [ label = "CFG: "] 
  "10300" -> "10299"  [ label = "CFG: "] 
  "10328" -> "10326"  [ label = "CFG: "] 
  "10343" -> "10341"  [ label = "CFG: "] 
  "10352" -> "10350"  [ label = "CFG: "] 
  "10357" -> "10364"  [ label = "CFG: "] 
  "10357" -> "10378"  [ label = "CFG: "] 
  "10383" -> "10391"  [ label = "CFG: "] 
  "10383" -> "10401"  [ label = "CFG: "] 
  "10399" -> "10398"  [ label = "CFG: "] 
  "10415" -> "10413"  [ label = "CFG: "] 
  "10424" -> "10422"  [ label = "CFG: "] 
  "10433" -> "10431"  [ label = "CFG: "] 
  "10439" -> "10438"  [ label = "CFG: "] 
  "10446" -> "10445"  [ label = "CFG: "] 
  "10473" -> "10481"  [ label = "CFG: "] 
  "10503" -> "10502"  [ label = "CFG: "] 
  "10513" -> "10511"  [ label = "CFG: "] 
  "10515" -> "10523"  [ label = "CFG: "] 
  "10515" -> "10535"  [ label = "CFG: "] 
  "10531" -> "10545"  [ label = "CFG: "] 
  "10531" -> "10561"  [ label = "CFG: "] 
  "10561" -> "10564"  [ label = "CFG: "] 
  "10564" -> "10560"  [ label = "CFG: "] 
  "10569" -> "10567"  [ label = "CFG: "] 
  "10575" -> "10579"  [ label = "CFG: "] 
  "10575" -> "10588"  [ label = "CFG: "] 
  "10329" -> "10330"  [ label = "CFG: "] 
  "10330" -> "10328"  [ label = "CFG: "] 
  "10344" -> "10345"  [ label = "CFG: "] 
  "10345" -> "10343"  [ label = "CFG: "] 
  "10353" -> "10354"  [ label = "CFG: "] 
  "10354" -> "10352"  [ label = "CFG: "] 
  "10361" -> "10385"  [ label = "CFG: "] 
  "10385" -> "10388"  [ label = "CFG: "] 
  "10385" -> "10383"  [ label = "CFG: "] 
  "10391" -> "10395"  [ label = "CFG: "] 
  "10394" -> "10401"  [ label = "CFG: "] 
  "10401" -> "10399"  [ label = "CFG: "] 
  "10416" -> "10417"  [ label = "CFG: "] 
  "10417" -> "10415"  [ label = "CFG: "] 
  "10425" -> "10426"  [ label = "CFG: "] 
  "10426" -> "10424"  [ label = "CFG: "] 
  "10475" -> "10473"  [ label = "CFG: "] 
  "10481" -> "10489"  [ label = "CFG: "] 
  "10481" -> "10499"  [ label = "CFG: "] 
  "10517" -> "10520"  [ label = "CFG: "] 
  "10517" -> "10515"  [ label = "CFG: "] 
  "10523" -> "10527"  [ label = "CFG: "] 
  "10526" -> "10535"  [ label = "CFG: "] 
  "10532" -> "10531"  [ label = "CFG: "] 
  "10570" -> "10569"  [ label = "CFG: "] 
  "10579" -> "10584"  [ label = "CFG: "] 
  "10584" -> "10591"  [ label = "CFG: "] 
  "10363" -> "10361"  [ label = "CFG: "] 
  "10375" -> "10385"  [ label = "CFG: "] 
  "10395" -> "10394"  [ label = "CFG: "] 
  "10476" -> "10475"  [ label = "CFG: "] 
  "10485" -> "10492"  [ label = "CFG: "] 
  "10492" -> "10503"  [ label = "CFG: "] 
  "10527" -> "10526"  [ label = "CFG: "] 
  "10534" -> "10532"  [ label = "CFG: "] 
  "10543" -> "10535"  [ label = "CFG: "] 
  "10543" -> "10551"  [ label = "CFG: "] 
  "10588" -> "10591"  [ label = "CFG: "] 
  "10364" -> "10368"  [ label = "CFG: "] 
  "10365" -> "10363"  [ label = "CFG: "] 
  "10377" -> "10375"  [ label = "CFG: "] 
  "10387" -> "10383"  [ label = "CFG: "] 
  "10489" -> "10485"  [ label = "CFG: "] 
  "10496" -> "10503"  [ label = "CFG: "] 
  "10519" -> "10515"  [ label = "CFG: "] 
  "10535" -> "10538"  [ label = "CFG: "] 
  "10538" -> "10534"  [ label = "CFG: "] 
  "10544" -> "10543"  [ label = "CFG: "] 
  "10551" -> "10553"  [ label = "CFG: "] 
  "10553" -> "10557"  [ label = "CFG: "] 
  "10556" -> "10535"  [ label = "CFG: "] 
  "10367" -> "10365"  [ label = "CFG: "] 
  "10378" -> "10380"  [ label = "CFG: "] 
  "10379" -> "10377"  [ label = "CFG: "] 
  "10388" -> "10387"  [ label = "CFG: "] 
  "10499" -> "10496"  [ label = "CFG: "] 
  "10520" -> "10519"  [ label = "CFG: "] 
  "10545" -> "10544"  [ label = "CFG: "] 
  "10557" -> "10556"  [ label = "CFG: "] 
  "10368" -> "10371"  [ label = "CFG: "] 
  "10371" -> "10367"  [ label = "CFG: "] 
  "10380" -> "10379"  [ label = "CFG: "] 
  "10286" -> "10297"  [ label = "CFG: "] 
  "10600" -> "10604"  [ label = "DDG: &lt;RET&gt;"] 
  "10295" -> "10604"  [ label = "DDG: pages"] 
  "10295" -> "10604"  [ label = "DDG: NULL"] 
  "10299" -> "10604"  [ label = "DDG: (void *)0"] 
  "10313" -> "10604"  [ label = "DDG: c"] 
  "10315" -> "10604"  [ label = "DDG: argv"] 
  "10313" -> "10604"  [ label = "DDG: getopt(argc, argv, &quot;l:p:x:y:W:H:wSh&quot;)"] 
  "10312" -> "10604"  [ label = "DDG: -1"] 
  "10312" -> "10604"  [ label = "DDG: (c = getopt(argc, argv, &quot;l:p:x:y:W:H:wSh&quot;)) != -1"] 
  "10450" -> "10604"  [ label = "DDG: npages"] 
  "10450" -> "10604"  [ label = "DDG: npages &gt; 0"] 
  "10454" -> "10604"  [ label = "DDG: pages"] 
  "10454" -> "10604"  [ label = "DDG: npages"] 
  "10457" -> "10604"  [ label = "DDG: uint16_t"] 
  "10454" -> "10604"  [ label = "DDG: qsort(pages, npages, sizeof(uint16_t), pcompar)"] 
  "10461" -> "10604"  [ label = "DDG: dowarnings"] 
  "10461" -> "10604"  [ label = "DDG: !dowarnings"] 
  "10464" -> "10604"  [ label = "DDG: TIFFSetWarningHandler(0)"] 
  "10467" -> "10604"  [ label = "DDG: optind"] 
  "10467" -> "10604"  [ label = "DDG: argc"] 
  "10467" -> "10604"  [ label = "DDG: optind &lt; argc"] 
  "10511" -> "10604"  [ label = "DDG: tmpfile()"] 
  "10515" -> "10604"  [ label = "DDG: NULL"] 
  "10519" -> "10604"  [ label = "DDG: (void *)0"] 
  "10515" -> "10604"  [ label = "DDG: fd == NULL"] 
  "10523" -> "10604"  [ label = "DDG: stderr"] 
  "10523" -> "10604"  [ label = "DDG: fprintf(stderr, &quot;Could not obtain temporary file.\n&quot;)"] 
  "10526" -> "10604"  [ label = "DDG: EXIT_FAILURE"] 
  "10526" -> "10604"  [ label = "DDG: exit(EXIT_FAILURE)"] 
  "10532" -> "10604"  [ label = "DDG: n"] 
  "10534" -> "10604"  [ label = "DDG: fileno(stdin)"] 
  "10534" -> "10604"  [ label = "DDG: buf"] 
  "10532" -> "10604"  [ label = "DDG: read(fileno(stdin), buf, sizeof(buf))"] 
  "10531" -> "10604"  [ label = "DDG: (n = read(fileno(stdin), buf, sizeof(buf))) &gt; 0"] 
  "10560" -> "10604"  [ label = "DDG: SEEK_SET"] 
  "10560" -> "10604"  [ label = "DDG: _TIFF_lseek_f(fileno(fd), 0, SEEK_SET)"] 
  "10569" -> "10604"  [ label = "DDG: fileno(fd)"] 
  "10567" -> "10604"  [ label = "DDG: TIFFFdOpen(fileno(fd), &quot;temp&quot;, &quot;r&quot;)"] 
  "10575" -> "10604"  [ label = "DDG: tif"] 
  "10575" -> "10604"  [ label = "DDG: tif &amp;&amp; 1"] 
  "10588" -> "10604"  [ label = "DDG: stderr"] 
  "10588" -> "10604"  [ label = "DDG: fprintf(stderr, &quot;Can not open, or not a TIFF file.\n&quot;)"] 
  "10579" -> "10604"  [ label = "DDG: npages"] 
  "10579" -> "10604"  [ label = "DDG: pages"] 
  "10579" -> "10604"  [ label = "DDG: fax2ps(tif, npages, pages, &quot;&lt;stdin&gt;&quot;)"] 
  "10584" -> "10604"  [ label = "DDG: tif"] 
  "10584" -> "10604"  [ label = "DDG: TIFFClose(tif)"] 
  "10591" -> "10604"  [ label = "DDG: fd"] 
  "10591" -> "10604"  [ label = "DDG: fclose(fd)"] 
  "10543" -> "10604"  [ label = "DDG: write(fileno(fd), buf, n)"] 
  "10543" -> "10604"  [ label = "DDG: write(fileno(fd), buf, n) != n"] 
  "10553" -> "10604"  [ label = "DDG: stderr"] 
  "10553" -> "10604"  [ label = "DDG: fprintf(stderr, &quot;Could not copy stdin to temporary file.\n&quot;)"] 
  "10556" -> "10604"  [ label = "DDG: EXIT_FAILURE"] 
  "10556" -> "10604"  [ label = "DDG: exit(EXIT_FAILURE)"] 
  "10473" -> "10604"  [ label = "DDG: TIFFOpen(argv[optind], &quot;r&quot;)"] 
  "10481" -> "10604"  [ label = "DDG: tif"] 
  "10481" -> "10604"  [ label = "DDG: tif &amp;&amp; 1"] 
  "10496" -> "10604"  [ label = "DDG: stderr"] 
  "10496" -> "10604"  [ label = "DDG: argv[optind]"] 
  "10496" -> "10604"  [ label = "DDG: fprintf(stderr, &quot;%s: Can not open, or not a TIFF file.\n&quot;,\012                        argv[optind])"] 
  "10485" -> "10604"  [ label = "DDG: npages"] 
  "10485" -> "10604"  [ label = "DDG: pages"] 
  "10485" -> "10604"  [ label = "DDG: argv[optind]"] 
  "10485" -> "10604"  [ label = "DDG: fax2ps(tif, npages, pages, argv[optind])"] 
  "10492" -> "10604"  [ label = "DDG: tif"] 
  "10492" -> "10604"  [ label = "DDG: TIFFClose(tif)"] 
  "10503" -> "10604"  [ label = "DDG: optind"] 
  "10502" -> "10604"  [ label = "DDG: argc"] 
  "10502" -> "10604"  [ label = "DDG: ++optind &lt; argc"] 
  "10593" -> "10604"  [ label = "DDG: printf(&quot;%%%%Trailer\n&quot;)"] 
  "10595" -> "10604"  [ label = "DDG: printf(&quot;%%%%Pages: %u\n&quot;, totalPages)"] 
  "10598" -> "10604"  [ label = "DDG: printf(&quot;%%%%EOF\n&quot;)"] 
  "10601" -> "10604"  [ label = "DDG: EXIT_SUCCESS"] 
  "10445" -> "10604"  [ label = "DDG: EXIT_FAILURE"] 
  "10445" -> "10604"  [ label = "DDG: usage(EXIT_FAILURE)"] 
  "10438" -> "10604"  [ label = "DDG: usage(EXIT_SUCCESS)"] 
  "10433" -> "10604"  [ label = "DDG: optarg"] 
  "10431" -> "10604"  [ label = "DDG: atoi(optarg)"] 
  "10426" -> "10604"  [ label = "DDG: optarg"] 
  "10424" -> "10604"  [ label = "DDG: atof(optarg)"] 
  "10422" -> "10604"  [ label = "DDG: (float)atof(optarg)"] 
  "10417" -> "10604"  [ label = "DDG: optarg"] 
  "10415" -> "10604"  [ label = "DDG: atof(optarg)"] 
  "10413" -> "10604"  [ label = "DDG: (float)atof(optarg)"] 
  "10354" -> "10604"  [ label = "DDG: optarg"] 
  "10352" -> "10604"  [ label = "DDG: atoi(optarg)"] 
  "10350" -> "10604"  [ label = "DDG: (uint16_t)atoi(optarg)"] 
  "10357" -> "10604"  [ label = "DDG: pages &amp;&amp; 1"] 
  "10380" -> "10604"  [ label = "DDG: uint16_t"] 
  "10377" -> "10604"  [ label = "DDG: malloc(sizeof(uint16_t))"] 
  "10375" -> "10604"  [ label = "DDG: (uint16_t *)malloc(sizeof(uint16_t))"] 
  "10367" -> "10604"  [ label = "DDG: npages + 1"] 
  "10371" -> "10604"  [ label = "DDG: uint16_t"] 
  "10365" -> "10604"  [ label = "DDG: (npages + 1) *\012                                                           sizeof(uint16_t)"] 
  "10363" -> "10604"  [ label = "DDG: realloc(pages, (npages + 1) *\012                                                           sizeof(uint16_t))"] 
  "10361" -> "10604"  [ label = "DDG: (uint16_t *)realloc(pages, (npages + 1) *\012                                                           sizeof(uint16_t))"] 
  "10383" -> "10604"  [ label = "DDG: pages"] 
  "10383" -> "10604"  [ label = "DDG: NULL"] 
  "10387" -> "10604"  [ label = "DDG: (void *)0"] 
  "10383" -> "10604"  [ label = "DDG: pages == NULL"] 
  "10391" -> "10604"  [ label = "DDG: stderr"] 
  "10391" -> "10604"  [ label = "DDG: fprintf(stderr, &quot;Out of memory\n&quot;)"] 
  "10394" -> "10604"  [ label = "DDG: EXIT_FAILURE"] 
  "10394" -> "10604"  [ label = "DDG: exit(EXIT_FAILURE)"] 
  "10398" -> "10604"  [ label = "DDG: pages[npages++]"] 
  "10398" -> "10604"  [ label = "DDG: pageNumber"] 
  "10345" -> "10604"  [ label = "DDG: optarg"] 
  "10343" -> "10604"  [ label = "DDG: atof(optarg)"] 
  "10341" -> "10604"  [ label = "DDG: (float)atof(optarg)"] 
  "10330" -> "10604"  [ label = "DDG: optarg"] 
  "10328" -> "10604"  [ label = "DDG: atof(optarg)"] 
  "10326" -> "10604"  [ label = "DDG: (float)atof(optarg)"] 
  "10535" -> "10604"  [ label = "DDG: stdin"] 
  "10341" -> "10604"  [ label = "DDG: pageWidth"] 
  "10335" -> "10604"  [ label = "DDG: scaleToPage"] 
  "10595" -> "10604"  [ label = "DDG: totalPages"] 
  "10431" -> "10604"  [ label = "DDG: maxline"] 
  "10413" -> "10604"  [ label = "DDG: defxres"] 
  "10326" -> "10604"  [ label = "DDG: pageHeight"] 
  "10422" -> "10604"  [ label = "DDG: defyres"] 
  "10454" -> "10604"  [ label = "DDG: pcompar"] 
  "10286" -> "10287"  [ label = "DDG: "] 
  "10286" -> "10288"  [ label = "DDG: "] 
  "10286" -> "10295"  [ label = "DDG: "] 
  "10286" -> "10302"  [ label = "DDG: "] 
  "10286" -> "10307"  [ label = "DDG: "] 
  "10601" -> "10600"  [ label = "DDG: EXIT_SUCCESS"] 
  "10286" -> "10593"  [ label = "DDG: "] 
  "10286" -> "10595"  [ label = "DDG: "] 
  "10286" -> "10598"  [ label = "DDG: "] 
  "10286" -> "10601"  [ label = "DDG: "] 
  "10313" -> "10312"  [ label = "DDG: c"] 
  "10315" -> "10312"  [ label = "DDG: argc"] 
  "10315" -> "10312"  [ label = "DDG: argv"] 
  "10315" -> "10312"  [ label = "DDG: &quot;l:p:x:y:W:H:wSh&quot;"] 
  "10319" -> "10312"  [ label = "DDG: 1"] 
  "10286" -> "10322"  [ label = "DDG: "] 
  "10302" -> "10450"  [ label = "DDG: npages"] 
  "10401" -> "10450"  [ label = "DDG: npages"] 
  "10286" -> "10450"  [ label = "DDG: "] 
  "10307" -> "10461"  [ label = "DDG: dowarnings"] 
  "10407" -> "10461"  [ label = "DDG: dowarnings"] 
  "10286" -> "10461"  [ label = "DDG: "] 
  "10286" -> "10467"  [ label = "DDG: "] 
  "10315" -> "10467"  [ label = "DDG: argc"] 
  "10286" -> "10299"  [ label = "DDG: "] 
  "10286" -> "10313"  [ label = "DDG: "] 
  "10315" -> "10313"  [ label = "DDG: argc"] 
  "10315" -> "10313"  [ label = "DDG: argv"] 
  "10315" -> "10313"  [ label = "DDG: &quot;l:p:x:y:W:H:wSh&quot;"] 
  "10286" -> "10319"  [ label = "DDG: "] 
  "10286" -> "10325"  [ label = "DDG: "] 
  "10330" -> "10326"  [ label = "DDG: optarg"] 
  "10286" -> "10334"  [ label = "DDG: "] 
  "10286" -> "10335"  [ label = "DDG: "] 
  "10286" -> "10340"  [ label = "DDG: "] 
  "10345" -> "10341"  [ label = "DDG: optarg"] 
  "10286" -> "10349"  [ label = "DDG: "] 
  "10354" -> "10350"  [ label = "DDG: optarg"] 
  "10350" -> "10398"  [ label = "DDG: pageNumber"] 
  "10286" -> "10398"  [ label = "DDG: "] 
  "10286" -> "10406"  [ label = "DDG: "] 
  "10286" -> "10407"  [ label = "DDG: "] 
  "10286" -> "10412"  [ label = "DDG: "] 
  "10417" -> "10413"  [ label = "DDG: optarg"] 
  "10286" -> "10421"  [ label = "DDG: "] 
  "10426" -> "10422"  [ label = "DDG: optarg"] 
  "10286" -> "10430"  [ label = "DDG: "] 
  "10433" -> "10431"  [ label = "DDG: optarg"] 
  "10286" -> "10437"  [ label = "DDG: "] 
  "10286" -> "10444"  [ label = "DDG: "] 
  "10295" -> "10454"  [ label = "DDG: pages"] 
  "10383" -> "10454"  [ label = "DDG: pages"] 
  "10398" -> "10454"  [ label = "DDG: pages[npages++]"] 
  "10286" -> "10454"  [ label = "DDG: "] 
  "10450" -> "10454"  [ label = "DDG: npages"] 
  "10286" -> "10464"  [ label = "DDG: "] 
  "10286" -> "10511"  [ label = "DDG: "] 
  "10569" -> "10567"  [ label = "DDG: fileno(fd)"] 
  "10569" -> "10567"  [ label = "DDG: &quot;temp&quot;"] 
  "10569" -> "10567"  [ label = "DDG: &quot;r&quot;"] 
  "10286" -> "10603"  [ label = "DDG: "] 
  "10287" -> "10315"  [ label = "DDG: argc"] 
  "10286" -> "10315"  [ label = "DDG: "] 
  "10288" -> "10315"  [ label = "DDG: argv"] 
  "10286" -> "10326"  [ label = "DDG: "] 
  "10286" -> "10341"  [ label = "DDG: "] 
  "10286" -> "10350"  [ label = "DDG: "] 
  "10286" -> "10413"  [ label = "DDG: "] 
  "10286" -> "10422"  [ label = "DDG: "] 
  "10286" -> "10431"  [ label = "DDG: "] 
  "10286" -> "10438"  [ label = "DDG: "] 
  "10286" -> "10445"  [ label = "DDG: "] 
  "10286" -> "10457"  [ label = "DDG: "] 
  "10475" -> "10473"  [ label = "DDG: argv[optind]"] 
  "10475" -> "10473"  [ label = "DDG: &quot;r&quot;"] 
  "10503" -> "10502"  [ label = "DDG: optind"] 
  "10467" -> "10502"  [ label = "DDG: argc"] 
  "10286" -> "10502"  [ label = "DDG: "] 
  "10561" -> "10560"  [ label = "DDG: fd"] 
  "10286" -> "10560"  [ label = "DDG: "] 
  "10286" -> "10567"  [ label = "DDG: "] 
  "10570" -> "10591"  [ label = "DDG: fd"] 
  "10286" -> "10591"  [ label = "DDG: "] 
  "10330" -> "10328"  [ label = "DDG: optarg"] 
  "10345" -> "10343"  [ label = "DDG: optarg"] 
  "10354" -> "10352"  [ label = "DDG: optarg"] 
  "10295" -> "10357"  [ label = "DDG: pages"] 
  "10383" -> "10357"  [ label = "DDG: pages"] 
  "10398" -> "10357"  [ label = "DDG: pages[npages++]"] 
  "10286" -> "10357"  [ label = "DDG: "] 
  "10365" -> "10361"  [ label = "DDG: pages"] 
  "10365" -> "10361"  [ label = "DDG: (npages + 1) *\012                                                           sizeof(uint16_t)"] 
  "10375" -> "10383"  [ label = "DDG: pages"] 
  "10361" -> "10383"  [ label = "DDG: pages"] 
  "10398" -> "10383"  [ label = "DDG: pages[npages++]"] 
  "10286" -> "10383"  [ label = "DDG: "] 
  "10417" -> "10415"  [ label = "DDG: optarg"] 
  "10426" -> "10424"  [ label = "DDG: optarg"] 
  "10426" -> "10433"  [ label = "DDG: optarg"] 
  "10417" -> "10433"  [ label = "DDG: optarg"] 
  "10354" -> "10433"  [ label = "DDG: optarg"] 
  "10345" -> "10433"  [ label = "DDG: optarg"] 
  "10330" -> "10433"  [ label = "DDG: optarg"] 
  "10286" -> "10433"  [ label = "DDG: "] 
  "10286" -> "10473"  [ label = "DDG: "] 
  "10467" -> "10503"  [ label = "DDG: optind"] 
  "10286" -> "10503"  [ label = "DDG: "] 
  "10511" -> "10515"  [ label = "DDG: fd"] 
  "10286" -> "10515"  [ label = "DDG: "] 
  "10532" -> "10531"  [ label = "DDG: n"] 
  "10534" -> "10531"  [ label = "DDG: fileno(stdin)"] 
  "10534" -> "10531"  [ label = "DDG: buf"] 
  "10286" -> "10531"  [ label = "DDG: "] 
  "10515" -> "10561"  [ label = "DDG: fd"] 
  "10545" -> "10561"  [ label = "DDG: fd"] 
  "10551" -> "10561"  [ label = "DDG: fd"] 
  "10286" -> "10561"  [ label = "DDG: "] 
  "10570" -> "10569"  [ label = "DDG: fd"] 
  "10286" -> "10569"  [ label = "DDG: "] 
  "10567" -> "10575"  [ label = "DDG: tif"] 
  "10286" -> "10575"  [ label = "DDG: "] 
  "10433" -> "10330"  [ label = "DDG: optarg"] 
  "10426" -> "10330"  [ label = "DDG: optarg"] 
  "10417" -> "10330"  [ label = "DDG: optarg"] 
  "10354" -> "10330"  [ label = "DDG: optarg"] 
  "10345" -> "10330"  [ label = "DDG: optarg"] 
  "10286" -> "10330"  [ label = "DDG: "] 
  "10433" -> "10345"  [ label = "DDG: optarg"] 
  "10426" -> "10345"  [ label = "DDG: optarg"] 
  "10417" -> "10345"  [ label = "DDG: optarg"] 
  "10354" -> "10345"  [ label = "DDG: optarg"] 
  "10330" -> "10345"  [ label = "DDG: optarg"] 
  "10286" -> "10345"  [ label = "DDG: "] 
  "10433" -> "10354"  [ label = "DDG: optarg"] 
  "10426" -> "10354"  [ label = "DDG: optarg"] 
  "10417" -> "10354"  [ label = "DDG: optarg"] 
  "10345" -> "10354"  [ label = "DDG: optarg"] 
  "10330" -> "10354"  [ label = "DDG: optarg"] 
  "10286" -> "10354"  [ label = "DDG: "] 
  "10286" -> "10361"  [ label = "DDG: "] 
  "10286" -> "10391"  [ label = "DDG: "] 
  "10286" -> "10394"  [ label = "DDG: "] 
  "10302" -> "10401"  [ label = "DDG: npages"] 
  "10286" -> "10401"  [ label = "DDG: "] 
  "10433" -> "10417"  [ label = "DDG: optarg"] 
  "10426" -> "10417"  [ label = "DDG: optarg"] 
  "10354" -> "10417"  [ label = "DDG: optarg"] 
  "10345" -> "10417"  [ label = "DDG: optarg"] 
  "10330" -> "10417"  [ label = "DDG: optarg"] 
  "10286" -> "10417"  [ label = "DDG: "] 
  "10433" -> "10426"  [ label = "DDG: optarg"] 
  "10417" -> "10426"  [ label = "DDG: optarg"] 
  "10354" -> "10426"  [ label = "DDG: optarg"] 
  "10345" -> "10426"  [ label = "DDG: optarg"] 
  "10330" -> "10426"  [ label = "DDG: optarg"] 
  "10286" -> "10426"  [ label = "DDG: "] 
  "10286" -> "10441"  [ label = "DDG: "] 
  "10286" -> "10448"  [ label = "DDG: "] 
  "10315" -> "10475"  [ label = "DDG: argv"] 
  "10496" -> "10475"  [ label = "DDG: argv[optind]"] 
  "10485" -> "10475"  [ label = "DDG: argv[optind]"] 
  "10286" -> "10475"  [ label = "DDG: "] 
  "10473" -> "10481"  [ label = "DDG: tif"] 
  "10286" -> "10481"  [ label = "DDG: "] 
  "10391" -> "10523"  [ label = "DDG: stderr"] 
  "10286" -> "10523"  [ label = "DDG: "] 
  "10286" -> "10526"  [ label = "DDG: "] 
  "10286" -> "10532"  [ label = "DDG: "] 
  "10534" -> "10532"  [ label = "DDG: fileno(stdin)"] 
  "10534" -> "10532"  [ label = "DDG: buf"] 
  "10286" -> "10566"  [ label = "DDG: "] 
  "10561" -> "10570"  [ label = "DDG: fd"] 
  "10286" -> "10570"  [ label = "DDG: "] 
  "10575" -> "10579"  [ label = "DDG: tif"] 
  "10286" -> "10579"  [ label = "DDG: "] 
  "10450" -> "10579"  [ label = "DDG: npages"] 
  "10454" -> "10579"  [ label = "DDG: npages"] 
  "10295" -> "10579"  [ label = "DDG: pages"] 
  "10454" -> "10579"  [ label = "DDG: pages"] 
  "10383" -> "10579"  [ label = "DDG: pages"] 
  "10398" -> "10579"  [ label = "DDG: pages[npages++]"] 
  "10579" -> "10584"  [ label = "DDG: tif"] 
  "10286" -> "10584"  [ label = "DDG: "] 
  "10365" -> "10363"  [ label = "DDG: pages"] 
  "10365" -> "10363"  [ label = "DDG: (npages + 1) *\012                                                           sizeof(uint16_t)"] 
  "10286" -> "10375"  [ label = "DDG: "] 
  "10286" -> "10387"  [ label = "DDG: "] 
  "10481" -> "10485"  [ label = "DDG: tif"] 
  "10286" -> "10485"  [ label = "DDG: "] 
  "10450" -> "10485"  [ label = "DDG: npages"] 
  "10454" -> "10485"  [ label = "DDG: npages"] 
  "10295" -> "10485"  [ label = "DDG: pages"] 
  "10454" -> "10485"  [ label = "DDG: pages"] 
  "10383" -> "10485"  [ label = "DDG: pages"] 
  "10398" -> "10485"  [ label = "DDG: pages[npages++]"] 
  "10315" -> "10485"  [ label = "DDG: argv"] 
  "10475" -> "10485"  [ label = "DDG: argv[optind]"] 
  "10485" -> "10492"  [ label = "DDG: tif"] 
  "10286" -> "10492"  [ label = "DDG: "] 
  "10286" -> "10519"  [ label = "DDG: "] 
  "10535" -> "10534"  [ label = "DDG: stdin"] 
  "10286" -> "10534"  [ label = "DDG: "] 
  "10544" -> "10543"  [ label = "DDG: fileno(fd)"] 
  "10544" -> "10543"  [ label = "DDG: buf"] 
  "10544" -> "10543"  [ label = "DDG: n"] 
  "10286" -> "10543"  [ label = "DDG: "] 
  "10523" -> "10588"  [ label = "DDG: stderr"] 
  "10553" -> "10588"  [ label = "DDG: stderr"] 
  "10391" -> "10588"  [ label = "DDG: stderr"] 
  "10286" -> "10588"  [ label = "DDG: "] 
  "10357" -> "10365"  [ label = "DDG: pages"] 
  "10398" -> "10365"  [ label = "DDG: pages[npages++]"] 
  "10286" -> "10365"  [ label = "DDG: "] 
  "10367" -> "10365"  [ label = "DDG: npages + 1"] 
  "10286" -> "10397"  [ label = "DDG: "] 
  "10391" -> "10496"  [ label = "DDG: stderr"] 
  "10286" -> "10496"  [ label = "DDG: "] 
  "10315" -> "10496"  [ label = "DDG: argv"] 
  "10475" -> "10496"  [ label = "DDG: argv[optind]"] 
  "10286" -> "10529"  [ label = "DDG: "] 
  "10286" -> "10535"  [ label = "DDG: "] 
  "10286" -> "10538"  [ label = "DDG: "] 
  "10545" -> "10544"  [ label = "DDG: fd"] 
  "10534" -> "10544"  [ label = "DDG: buf"] 
  "10286" -> "10544"  [ label = "DDG: "] 
  "10532" -> "10544"  [ label = "DDG: n"] 
  "10545" -> "10551"  [ label = "DDG: fd"] 
  "10286" -> "10551"  [ label = "DDG: "] 
  "10523" -> "10553"  [ label = "DDG: stderr"] 
  "10391" -> "10553"  [ label = "DDG: stderr"] 
  "10286" -> "10553"  [ label = "DDG: "] 
  "10286" -> "10556"  [ label = "DDG: "] 
  "10302" -> "10367"  [ label = "DDG: npages"] 
  "10401" -> "10367"  [ label = "DDG: npages"] 
  "10286" -> "10367"  [ label = "DDG: "] 
  "10286" -> "10379"  [ label = "DDG: "] 
  "10515" -> "10545"  [ label = "DDG: fd"] 
  "10551" -> "10545"  [ label = "DDG: fd"] 
  "10286" -> "10545"  [ label = "DDG: "] 
  "10302" -> "10368"  [ label = "DDG: npages"] 
  "10401" -> "10368"  [ label = "DDG: npages"] 
  "10286" -> "10368"  [ label = "DDG: "] 
  "10286" -> "10371"  [ label = "DDG: "] 
  "10286" -> "10380"  [ label = "DDG: "] 
  "10286" -> "10559"  [ label = "DDG: "] 
  "10297" -> "10300"  [ label = "CDG: "] 
  "10297" -> "10299"  [ label = "CDG: "] 
  "10312" -> "10315"  [ label = "CDG: "] 
  "10312" -> "10313"  [ label = "CDG: "] 
  "10312" -> "10312"  [ label = "CDG: "] 
  "10312" -> "10319"  [ label = "CDG: "] 
  "10312" -> "10357"  [ label = "CDG: "] 
  "10312" -> "10343"  [ label = "CDG: "] 
  "10312" -> "10329"  [ label = "CDG: "] 
  "10312" -> "10416"  [ label = "CDG: "] 
  "10312" -> "10431"  [ label = "CDG: "] 
  "10312" -> "10407"  [ label = "CDG: "] 
  "10312" -> "10328"  [ label = "CDG: "] 
  "10312" -> "10422"  [ label = "CDG: "] 
  "10312" -> "10353"  [ label = "CDG: "] 
  "10312" -> "10398"  [ label = "CDG: "] 
  "10312" -> "10415"  [ label = "CDG: "] 
  "10312" -> "10354"  [ label = "CDG: "] 
  "10312" -> "10385"  [ label = "CDG: "] 
  "10312" -> "10438"  [ label = "CDG: "] 
  "10312" -> "10383"  [ label = "CDG: "] 
  "10312" -> "10341"  [ label = "CDG: "] 
  "10312" -> "10417"  [ label = "CDG: "] 
  "10312" -> "10401"  [ label = "CDG: "] 
  "10312" -> "10433"  [ label = "CDG: "] 
  "10312" -> "10326"  [ label = "CDG: "] 
  "10312" -> "10352"  [ label = "CDG: "] 
  "10312" -> "10446"  [ label = "CDG: "] 
  "10312" -> "10330"  [ label = "CDG: "] 
  "10312" -> "10439"  [ label = "CDG: "] 
  "10312" -> "10345"  [ label = "CDG: "] 
  "10312" -> "10413"  [ label = "CDG: "] 
  "10312" -> "10424"  [ label = "CDG: "] 
  "10312" -> "10445"  [ label = "CDG: "] 
  "10312" -> "10426"  [ label = "CDG: "] 
  "10312" -> "10425"  [ label = "CDG: "] 
  "10312" -> "10399"  [ label = "CDG: "] 
  "10312" -> "10335"  [ label = "CDG: "] 
  "10312" -> "10344"  [ label = "CDG: "] 
  "10312" -> "10350"  [ label = "CDG: "] 
  "10450" -> "10454"  [ label = "CDG: "] 
  "10450" -> "10457"  [ label = "CDG: "] 
  "10461" -> "10464"  [ label = "CDG: "] 
  "10467" -> "10511"  [ label = "CDG: "] 
  "10467" -> "10517"  [ label = "CDG: "] 
  "10467" -> "10503"  [ label = "CDG: "] 
  "10467" -> "10515"  [ label = "CDG: "] 
  "10467" -> "10567"  [ label = "CDG: "] 
  "10467" -> "10473"  [ label = "CDG: "] 
  "10467" -> "10535"  [ label = "CDG: "] 
  "10467" -> "10534"  [ label = "CDG: "] 
  "10467" -> "10475"  [ label = "CDG: "] 
  "10467" -> "10561"  [ label = "CDG: "] 
  "10467" -> "10502"  [ label = "CDG: "] 
  "10467" -> "10575"  [ label = "CDG: "] 
  "10467" -> "10476"  [ label = "CDG: "] 
  "10467" -> "10570"  [ label = "CDG: "] 
  "10467" -> "10538"  [ label = "CDG: "] 
  "10467" -> "10481"  [ label = "CDG: "] 
  "10467" -> "10591"  [ label = "CDG: "] 
  "10467" -> "10531"  [ label = "CDG: "] 
  "10467" -> "10569"  [ label = "CDG: "] 
  "10467" -> "10564"  [ label = "CDG: "] 
  "10467" -> "10532"  [ label = "CDG: "] 
  "10467" -> "10513"  [ label = "CDG: "] 
  "10467" -> "10560"  [ label = "CDG: "] 
  "10502" -> "10503"  [ label = "CDG: "] 
  "10502" -> "10473"  [ label = "CDG: "] 
  "10502" -> "10475"  [ label = "CDG: "] 
  "10502" -> "10502"  [ label = "CDG: "] 
  "10502" -> "10476"  [ label = "CDG: "] 
  "10502" -> "10481"  [ label = "CDG: "] 
  "10357" -> "10377"  [ label = "CDG: "] 
  "10357" -> "10364"  [ label = "CDG: "] 
  "10357" -> "10361"  [ label = "CDG: "] 
  "10357" -> "10363"  [ label = "CDG: "] 
  "10357" -> "10375"  [ label = "CDG: "] 
  "10357" -> "10365"  [ label = "CDG: "] 
  "10357" -> "10378"  [ label = "CDG: "] 
  "10357" -> "10379"  [ label = "CDG: "] 
  "10357" -> "10368"  [ label = "CDG: "] 
  "10357" -> "10371"  [ label = "CDG: "] 
  "10357" -> "10367"  [ label = "CDG: "] 
  "10357" -> "10380"  [ label = "CDG: "] 
  "10383" -> "10391"  [ label = "CDG: "] 
  "10383" -> "10394"  [ label = "CDG: "] 
  "10383" -> "10395"  [ label = "CDG: "] 
  "10515" -> "10526"  [ label = "CDG: "] 
  "10515" -> "10527"  [ label = "CDG: "] 
  "10515" -> "10523"  [ label = "CDG: "] 
  "10531" -> "10545"  [ label = "CDG: "] 
  "10531" -> "10543"  [ label = "CDG: "] 
  "10531" -> "10535"  [ label = "CDG: "] 
  "10531" -> "10534"  [ label = "CDG: "] 
  "10531" -> "10538"  [ label = "CDG: "] 
  "10531" -> "10544"  [ label = "CDG: "] 
  "10531" -> "10531"  [ label = "CDG: "] 
  "10531" -> "10532"  [ label = "CDG: "] 
  "10575" -> "10584"  [ label = "CDG: "] 
  "10575" -> "10579"  [ label = "CDG: "] 
  "10575" -> "10588"  [ label = "CDG: "] 
  "10385" -> "10388"  [ label = "CDG: "] 
  "10385" -> "10387"  [ label = "CDG: "] 
  "10481" -> "10489"  [ label = "CDG: "] 
  "10481" -> "10485"  [ label = "CDG: "] 
  "10481" -> "10496"  [ label = "CDG: "] 
  "10481" -> "10499"  [ label = "CDG: "] 
  "10481" -> "10492"  [ label = "CDG: "] 
  "10517" -> "10520"  [ label = "CDG: "] 
  "10517" -> "10519"  [ label = "CDG: "] 
  "10543" -> "10551"  [ label = "CDG: "] 
  "10543" -> "10557"  [ label = "CDG: "] 
  "10543" -> "10553"  [ label = "CDG: "] 
  "10543" -> "10556"  [ label = "CDG: "] 
}
