digraph "put2bitbwtile" {  
"50260" [label = <(METHOD,put2bitbwtile)<SUB>1617</SUB>> ]
"50261" [label = <(PARAM,DECLAREContigPutFunc(put2bitbwtile))<SUB>1617</SUB>> ]
"50262" [label = <(PARAM,DECLAREContigPutFunc(put2bitbwtile))<SUB>1617</SUB>> ]
"50263" [label = <(PARAM,DECLAREContigPutFunc(put2bitbwtile))<SUB>1617</SUB>> ]
"50264" [label = <(PARAM,DECLAREContigPutFunc(put2bitbwtile))<SUB>1617</SUB>> ]
"50265" [label = <(PARAM,DECLAREContigPutFunc(put2bitbwtile))<SUB>1617</SUB>> ]
"50266" [label = <(PARAM,DECLAREContigPutFunc(put2bitbwtile))<SUB>1617</SUB>> ]
"50267" [label = <(PARAM,DECLAREContigPutFunc(put2bitbwtile))<SUB>1617</SUB>> ]
"50268" [label = <(PARAM,DECLAREContigPutFunc(put2bitbwtile))<SUB>1617</SUB>> ]
"50269" [label = <(PARAM,DECLAREContigPutFunc(put2bitbwtile))<SUB>1617</SUB>> ]
"50270" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1618</SUB>> ]
"50271" [label = <(LOCAL,uint32_t** BWmap: uint32_t)<SUB>1619</SUB>> ]
"50272" [label = <(&lt;operator&gt;.assignment,**BWmap = img-&gt;BWmap)<SUB>1619</SUB>> ]
"50273" [label = <(IDENTIFIER,BWmap,**BWmap = img-&gt;BWmap)<SUB>1619</SUB>> ]
"50274" [label = <(&lt;operator&gt;.indirectFieldAccess,img-&gt;BWmap)<SUB>1619</SUB>> ]
"50275" [label = <(IDENTIFIER,img,**BWmap = img-&gt;BWmap)<SUB>1619</SUB>> ]
"50276" [label = <(FIELD_IDENTIFIER,BWmap,BWmap)<SUB>1619</SUB>> ]
"50277" [label = <(&lt;operator&gt;.cast,(void)x)<SUB>1621</SUB>> ]
"50278" [label = <(UNKNOWN,void,void)<SUB>1621</SUB>> ]
"50279" [label = <(IDENTIFIER,x,(void)x)<SUB>1621</SUB>> ]
"50280" [label = <(&lt;operator&gt;.cast,(void)y)<SUB>1622</SUB>> ]
"50281" [label = <(UNKNOWN,void,void)<SUB>1622</SUB>> ]
"50282" [label = <(IDENTIFIER,y,(void)y)<SUB>1622</SUB>> ]
"50283" [label = <(&lt;operator&gt;.assignmentDivision,fromskew /= 4)<SUB>1623</SUB>> ]
"50284" [label = <(IDENTIFIER,fromskew,fromskew /= 4)<SUB>1623</SUB>> ]
"50285" [label = <(LITERAL,4,fromskew /= 4)<SUB>1623</SUB>> ]
"50286" [label = <(CONTROL_STRUCTURE,for (;h &gt; 0;--h),for (;h &gt; 0;--h))<SUB>1624</SUB>> ]
"50287" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1624</SUB>> ]
"50288" [label = <(&lt;operator&gt;.greaterThan,h &gt; 0)<SUB>1624</SUB>> ]
"50289" [label = <(IDENTIFIER,h,h &gt; 0)<SUB>1624</SUB>> ]
"50290" [label = <(LITERAL,0,h &gt; 0)<SUB>1624</SUB>> ]
"50291" [label = <(&lt;operator&gt;.preDecrement,--h)<SUB>1624</SUB>> ]
"50292" [label = <(IDENTIFIER,h,--h)<SUB>1624</SUB>> ]
"50293" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1625</SUB>> ]
"50294" [label = <(LOCAL,uint32_t* bw: uint32_t)<SUB>1626</SUB>> ]
"50295" [label = <(UNROLL4,UNROLL4(w, bw = BWmap[*pp++], *cp++ = *bw++))<SUB>1627</SUB>> ]
"50296" [label = <(IDENTIFIER,w,UNROLL4(w, bw = BWmap[*pp++], *cp++ = *bw++))<SUB>1627</SUB>> ]
"50297" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)> ]
"50298" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1627</SUB>> ]
"50299" [label = <(LOCAL,uint32_t _x: uint32_t)<SUB>1627</SUB>> ]
"50300" [label = <(CONTROL_STRUCTURE,for (UNROLL4(w, bw = BWmap[*pp++], *cp++ = *bw++)_x &gt;= 4;_x -= 4),for (UNROLL4(w, bw = BWmap[*pp++], *cp++ = *bw++)_x &gt;= 4;_x -= 4))<SUB>1627</SUB>> ]
"50301" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1627</SUB>> ]
"50302" [label = <(&lt;operator&gt;.assignment,_x = w)<SUB>1627</SUB>> ]
"50303" [label = <(IDENTIFIER,_x,_x = w)<SUB>1627</SUB>> ]
"50304" [label = <(IDENTIFIER,w,_x = w)<SUB>1627</SUB>> ]
"50305" [label = <(&lt;operator&gt;.greaterEqualsThan,_x &gt;= 4)<SUB>1627</SUB>> ]
"50306" [label = <(IDENTIFIER,_x,_x &gt;= 4)<SUB>1627</SUB>> ]
"50307" [label = <(LITERAL,4,_x &gt;= 4)<SUB>1627</SUB>> ]
"50308" [label = <(&lt;operator&gt;.assignmentMinus,_x -= 4)<SUB>1627</SUB>> ]
"50309" [label = <(IDENTIFIER,_x,_x -= 4)<SUB>1627</SUB>> ]
"50310" [label = <(LITERAL,4,_x -= 4)<SUB>1627</SUB>> ]
"50311" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1627</SUB>> ]
"50312" [label = <(&lt;operator&gt;.assignment,bw = BWmap[*pp++])<SUB>1627</SUB>> ]
"50313" [label = <(IDENTIFIER,bw,bw = BWmap[*pp++])<SUB>1627</SUB>> ]
"50314" [label = <(&lt;operator&gt;.indirectIndexAccess,BWmap[*pp++])<SUB>1627</SUB>> ]
"50315" [label = <(IDENTIFIER,BWmap,bw = BWmap[*pp++])<SUB>1627</SUB>> ]
"50316" [label = <(&lt;operator&gt;.indirection,*pp++)<SUB>1627</SUB>> ]
"50317" [label = <(&lt;operator&gt;.postIncrement,pp++)<SUB>1627</SUB>> ]
"50318" [label = <(IDENTIFIER,pp,pp++)<SUB>1627</SUB>> ]
"50319" [label = <(&lt;operator&gt;.assignment,*cp++ = *bw++)<SUB>1627</SUB>> ]
"50320" [label = <(&lt;operator&gt;.indirection,*cp++)<SUB>1627</SUB>> ]
"50321" [label = <(&lt;operator&gt;.postIncrement,cp++)<SUB>1627</SUB>> ]
"50322" [label = <(IDENTIFIER,cp,cp++)<SUB>1627</SUB>> ]
"50323" [label = <(&lt;operator&gt;.indirection,*bw++)<SUB>1627</SUB>> ]
"50324" [label = <(&lt;operator&gt;.postIncrement,bw++)<SUB>1627</SUB>> ]
"50325" [label = <(IDENTIFIER,bw,bw++)<SUB>1627</SUB>> ]
"50326" [label = <(&lt;operator&gt;.assignment,*cp++ = *bw++)<SUB>1627</SUB>> ]
"50327" [label = <(&lt;operator&gt;.indirection,*cp++)<SUB>1627</SUB>> ]
"50328" [label = <(&lt;operator&gt;.postIncrement,cp++)<SUB>1627</SUB>> ]
"50329" [label = <(IDENTIFIER,cp,cp++)<SUB>1627</SUB>> ]
"50330" [label = <(&lt;operator&gt;.indirection,*bw++)<SUB>1627</SUB>> ]
"50331" [label = <(&lt;operator&gt;.postIncrement,bw++)<SUB>1627</SUB>> ]
"50332" [label = <(IDENTIFIER,bw,bw++)<SUB>1627</SUB>> ]
"50333" [label = <(&lt;operator&gt;.assignment,*cp++ = *bw++)<SUB>1627</SUB>> ]
"50334" [label = <(&lt;operator&gt;.indirection,*cp++)<SUB>1627</SUB>> ]
"50335" [label = <(&lt;operator&gt;.postIncrement,cp++)<SUB>1627</SUB>> ]
"50336" [label = <(IDENTIFIER,cp,cp++)<SUB>1627</SUB>> ]
"50337" [label = <(&lt;operator&gt;.indirection,*bw++)<SUB>1627</SUB>> ]
"50338" [label = <(&lt;operator&gt;.postIncrement,bw++)<SUB>1627</SUB>> ]
"50339" [label = <(IDENTIFIER,bw,bw++)<SUB>1627</SUB>> ]
"50340" [label = <(&lt;operator&gt;.assignment,*cp++ = *bw++)<SUB>1627</SUB>> ]
"50341" [label = <(&lt;operator&gt;.indirection,*cp++)<SUB>1627</SUB>> ]
"50342" [label = <(&lt;operator&gt;.postIncrement,cp++)<SUB>1627</SUB>> ]
"50343" [label = <(IDENTIFIER,cp,cp++)<SUB>1627</SUB>> ]
"50344" [label = <(&lt;operator&gt;.indirection,*bw++)<SUB>1627</SUB>> ]
"50345" [label = <(&lt;operator&gt;.postIncrement,bw++)<SUB>1627</SUB>> ]
"50346" [label = <(IDENTIFIER,bw,bw++)<SUB>1627</SUB>> ]
"50347" [label = <(CONTROL_STRUCTURE,if (_x &gt; 0),if (_x &gt; 0))<SUB>1627</SUB>> ]
"50348" [label = <(&lt;operator&gt;.greaterThan,_x &gt; 0)<SUB>1627</SUB>> ]
"50349" [label = <(IDENTIFIER,_x,_x &gt; 0)<SUB>1627</SUB>> ]
"50350" [label = <(LITERAL,0,_x &gt; 0)<SUB>1627</SUB>> ]
"50351" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1627</SUB>> ]
"50352" [label = <(&lt;operator&gt;.assignment,bw = BWmap[*pp++])<SUB>1627</SUB>> ]
"50353" [label = <(IDENTIFIER,bw,bw = BWmap[*pp++])<SUB>1627</SUB>> ]
"50354" [label = <(&lt;operator&gt;.indirectIndexAccess,BWmap[*pp++])<SUB>1627</SUB>> ]
"50355" [label = <(IDENTIFIER,BWmap,bw = BWmap[*pp++])<SUB>1627</SUB>> ]
"50356" [label = <(&lt;operator&gt;.indirection,*pp++)<SUB>1627</SUB>> ]
"50357" [label = <(&lt;operator&gt;.postIncrement,pp++)<SUB>1627</SUB>> ]
"50358" [label = <(IDENTIFIER,pp,pp++)<SUB>1627</SUB>> ]
"50359" [label = <(CONTROL_STRUCTURE,switch(_x),switch(_x))<SUB>1627</SUB>> ]
"50360" [label = <(IDENTIFIER,_x,switch(_x))<SUB>1627</SUB>> ]
"50361" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1627</SUB>> ]
"50362" [label = <(JUMP_TARGET,default)<SUB>1627</SUB>> ]
"50363" [label = <(LITERAL,3,&lt;empty&gt;)<SUB>1627</SUB>> ]
"50364" [label = <(&lt;operator&gt;.assignment,*cp++ = *bw++)<SUB>1627</SUB>> ]
"50365" [label = <(&lt;operator&gt;.indirection,*cp++)<SUB>1627</SUB>> ]
"50366" [label = <(&lt;operator&gt;.postIncrement,cp++)<SUB>1627</SUB>> ]
"50367" [label = <(IDENTIFIER,cp,cp++)<SUB>1627</SUB>> ]
"50368" [label = <(&lt;operator&gt;.indirection,*bw++)<SUB>1627</SUB>> ]
"50369" [label = <(&lt;operator&gt;.postIncrement,bw++)<SUB>1627</SUB>> ]
"50370" [label = <(IDENTIFIER,bw,bw++)<SUB>1627</SUB>> ]
"50371" [label = <(JUMP_TARGET,default)<SUB>1627</SUB>> ]
"50372" [label = <(LITERAL,2,&lt;empty&gt;)<SUB>1627</SUB>> ]
"50373" [label = <(&lt;operator&gt;.assignment,*cp++ = *bw++)<SUB>1627</SUB>> ]
"50374" [label = <(&lt;operator&gt;.indirection,*cp++)<SUB>1627</SUB>> ]
"50375" [label = <(&lt;operator&gt;.postIncrement,cp++)<SUB>1627</SUB>> ]
"50376" [label = <(IDENTIFIER,cp,cp++)<SUB>1627</SUB>> ]
"50377" [label = <(&lt;operator&gt;.indirection,*bw++)<SUB>1627</SUB>> ]
"50378" [label = <(&lt;operator&gt;.postIncrement,bw++)<SUB>1627</SUB>> ]
"50379" [label = <(IDENTIFIER,bw,bw++)<SUB>1627</SUB>> ]
"50380" [label = <(JUMP_TARGET,default)<SUB>1627</SUB>> ]
"50381" [label = <(LITERAL,1,&lt;empty&gt;)<SUB>1627</SUB>> ]
"50382" [label = <(&lt;operator&gt;.assignment,*cp++ = *bw++)<SUB>1627</SUB>> ]
"50383" [label = <(&lt;operator&gt;.indirection,*cp++)<SUB>1627</SUB>> ]
"50384" [label = <(&lt;operator&gt;.postIncrement,cp++)<SUB>1627</SUB>> ]
"50385" [label = <(IDENTIFIER,cp,cp++)<SUB>1627</SUB>> ]
"50386" [label = <(&lt;operator&gt;.indirection,*bw++)<SUB>1627</SUB>> ]
"50387" [label = <(&lt;operator&gt;.postIncrement,bw++)<SUB>1627</SUB>> ]
"50388" [label = <(IDENTIFIER,bw,bw++)<SUB>1627</SUB>> ]
"50389" [label = <(&lt;operator&gt;.assignmentPlus,cp += toskew)<SUB>1628</SUB>> ]
"50390" [label = <(IDENTIFIER,cp,cp += toskew)<SUB>1628</SUB>> ]
"50391" [label = <(IDENTIFIER,toskew,cp += toskew)<SUB>1628</SUB>> ]
"50392" [label = <(&lt;operator&gt;.assignmentPlus,pp += fromskew)<SUB>1629</SUB>> ]
"50393" [label = <(IDENTIFIER,pp,pp += fromskew)<SUB>1629</SUB>> ]
"50394" [label = <(IDENTIFIER,fromskew,pp += fromskew)<SUB>1629</SUB>> ]
"50395" [label = <(METHOD_RETURN,void)<SUB>1617</SUB>> ]
  "50260" -> "50261" 
  "50260" -> "50262" 
  "50260" -> "50263" 
  "50260" -> "50264" 
  "50260" -> "50265" 
  "50260" -> "50266" 
  "50260" -> "50267" 
  "50260" -> "50268" 
  "50260" -> "50269" 
  "50260" -> "50270" 
  "50260" -> "50395" 
  "50270" -> "50271" 
  "50270" -> "50272" 
  "50270" -> "50277" 
  "50270" -> "50280" 
  "50270" -> "50283" 
  "50270" -> "50286" 
  "50272" -> "50273" 
  "50272" -> "50274" 
  "50274" -> "50275" 
  "50274" -> "50276" 
  "50277" -> "50278" 
  "50277" -> "50279" 
  "50280" -> "50281" 
  "50280" -> "50282" 
  "50283" -> "50284" 
  "50283" -> "50285" 
  "50286" -> "50287" 
  "50286" -> "50288" 
  "50286" -> "50291" 
  "50286" -> "50293" 
  "50288" -> "50289" 
  "50288" -> "50290" 
  "50291" -> "50292" 
  "50293" -> "50294" 
  "50293" -> "50295" 
  "50293" -> "50389" 
  "50293" -> "50392" 
  "50295" -> "50296" 
  "50295" -> "50297" 
  "50297" -> "50298" 
  "50298" -> "50299" 
  "50298" -> "50300" 
  "50298" -> "50347" 
  "50300" -> "50301" 
  "50300" -> "50305" 
  "50300" -> "50308" 
  "50300" -> "50311" 
  "50301" -> "50302" 
  "50302" -> "50303" 
  "50302" -> "50304" 
  "50305" -> "50306" 
  "50305" -> "50307" 
  "50308" -> "50309" 
  "50308" -> "50310" 
  "50311" -> "50312" 
  "50311" -> "50319" 
  "50311" -> "50326" 
  "50311" -> "50333" 
  "50311" -> "50340" 
  "50312" -> "50313" 
  "50312" -> "50314" 
  "50314" -> "50315" 
  "50314" -> "50316" 
  "50316" -> "50317" 
  "50317" -> "50318" 
  "50319" -> "50320" 
  "50319" -> "50323" 
  "50320" -> "50321" 
  "50321" -> "50322" 
  "50323" -> "50324" 
  "50324" -> "50325" 
  "50326" -> "50327" 
  "50326" -> "50330" 
  "50327" -> "50328" 
  "50328" -> "50329" 
  "50330" -> "50331" 
  "50331" -> "50332" 
  "50333" -> "50334" 
  "50333" -> "50337" 
  "50334" -> "50335" 
  "50335" -> "50336" 
  "50337" -> "50338" 
  "50338" -> "50339" 
  "50340" -> "50341" 
  "50340" -> "50344" 
  "50341" -> "50342" 
  "50342" -> "50343" 
  "50344" -> "50345" 
  "50345" -> "50346" 
  "50347" -> "50348" 
  "50347" -> "50351" 
  "50348" -> "50349" 
  "50348" -> "50350" 
  "50351" -> "50352" 
  "50351" -> "50359" 
  "50352" -> "50353" 
  "50352" -> "50354" 
  "50354" -> "50355" 
  "50354" -> "50356" 
  "50356" -> "50357" 
  "50357" -> "50358" 
  "50359" -> "50360" 
  "50359" -> "50361" 
  "50361" -> "50362" 
  "50361" -> "50363" 
  "50361" -> "50364" 
  "50361" -> "50371" 
  "50361" -> "50372" 
  "50361" -> "50373" 
  "50361" -> "50380" 
  "50361" -> "50381" 
  "50361" -> "50382" 
  "50364" -> "50365" 
  "50364" -> "50368" 
  "50365" -> "50366" 
  "50366" -> "50367" 
  "50368" -> "50369" 
  "50369" -> "50370" 
  "50373" -> "50374" 
  "50373" -> "50377" 
  "50374" -> "50375" 
  "50375" -> "50376" 
  "50377" -> "50378" 
  "50378" -> "50379" 
  "50382" -> "50383" 
  "50382" -> "50386" 
  "50383" -> "50384" 
  "50384" -> "50385" 
  "50386" -> "50387" 
  "50387" -> "50388" 
  "50389" -> "50390" 
  "50389" -> "50391" 
  "50392" -> "50393" 
  "50392" -> "50394" 
}
