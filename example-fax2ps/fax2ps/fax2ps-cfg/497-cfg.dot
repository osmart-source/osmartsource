digraph "emitFont" {  
"9749" [label = <(&lt;operator&gt;.assignment,*fontPrologue[] = {\012        &quot;/newfont 10 dict def newfont begin /FontType 3 def /FontMatrix [1&quot;,\012        &quot;0 0 1 0 0] def /FontBBox [0 0 512 1] def /Encoding 256 array def&quot;,\012        &quot;0 1 31{Encoding exch /255 put}for 120 1 255{Encoding exch /255&quot;,\012        &quot;put}for Encoding 37 /255 put Encoding 40 /255 put Encoding 41 /255&quot;,\012        &quot;put Encoding 92 /255 put /count 0 def /ls{Encoding exch count 3&quot;,\012        &quot;string cvs cvn put /count count 1 add def}def 32 1 36{ls}for&quot;,\012        &quot;38 1 39{ls}for 42 1 91{ls}for 93 1 99{ls}for /count 100&quot;,\012        &quot;def 100 1 119{ls}for /CharDict 5 dict def CharDict begin /white&quot;,\012        &quot;{dup 255 eq{pop}{1 dict begin 100 sub neg 512 exch bitshift&quot;,\012        &quot;/cw exch def cw 0 0 0 cw 1 setcachedevice end}ifelse}def /black&quot;,\012        &quot;{dup 255 eq{pop}{1 dict begin 110 sub neg 512 exch bitshift&quot;,\012        &quot;/cw exch def cw 0 0 0 cw 1 setcachedevice 0 0 moveto cw 0 rlineto&quot;,\012        &quot;0 1 rlineto cw neg 0 rlineto closepath fill end}ifelse}def /numbuild&quot;,\012        &quot;{dup 255 eq{pop}{6 0 0 0 6 1 setcachedevice 0 1 5{0 moveto&quot;,\012        &quot;dup 32 and 32 eq{1 0 rlineto 0 1 rlineto -1 0 rlineto closepath&quot;,\012        &quot;fill newpath}if 1 bitshift}for pop}ifelse}def /.notdef {}&quot;,\012        &quot;def /255 {}def end /BuildChar{exch begin dup 110 ge{Encoding&quot;,\012        &quot;exch get 3 string cvs cvi CharDict /black get}{dup 100 ge {Encoding&quot;,\012        &quot;exch get 3 string cvs cvi CharDict /white get}{Encoding exch get&quot;,\012        &quot;3 string cvs cvi CharDict /numbuild get}ifelse}ifelse exec end&quot;,\012        &quot;}def end /Bitfont newfont definefont 1 scalefont setfont&quot;,\012        NULL})<SUB>182</SUB>> ]
"9751" [label = <(&lt;operator&gt;.arrayInitializer,{\012        &quot;/newfont 10 dict def newfont begin /FontType 3 def /FontMatrix [1&quot;,\012        &quot;0 0 1 0 0] def /FontBBox [0 0 512 1] def /Encoding 256 array def&quot;,\012        &quot;0 1 31{Encoding exch /255 put}for 120 1 255{Encoding exch /255&quot;,\012        &quot;put}for Encoding 37 /255 put Encoding 40 /255 put Encoding 41 /255&quot;,\012        &quot;put Encoding 92 /255 put /count 0 def /ls{Encoding exch count 3&quot;,\012        &quot;string cvs cvn put /count count 1 add def}def 32 1 36{ls}for&quot;,\012        &quot;38 1 39{ls}for 42 1 91{ls}for 93 1 99{ls}for /count 100&quot;,\012        &quot;def 100 1 119{ls}for /CharDict 5 dict def CharDict begin /white&quot;,\012        &quot;{dup 255 eq{pop}{1 dict begin 100 sub neg 512 exch bitshift&quot;,\012        &quot;/cw exch def cw 0 0 0 cw 1 setcachedevice end}ifelse}def /black&quot;,\012        &quot;{dup 255 eq{pop}{1 dict begin 110 sub neg 512 exch bitshift&quot;,\012        &quot;/cw exch def cw 0 0 0 cw 1 setcachedevice 0 0 moveto cw 0 rlineto&quot;,\012        &quot;0 1 rlineto cw neg 0 rlineto closepath fill end}ifelse}def /numbuild&quot;,\012        &quot;{dup 255 eq{pop}{6 0 0 0 6 1 setcachedevice 0 1 5{0 moveto&quot;,\012        &quot;dup 32 and 32 eq{1 0 rlineto 0 1 rlineto -1 0 rlineto closepath&quot;,\012        &quot;fill newpath}if 1 bitshift}for pop}ifelse}def /.notdef {}&quot;,\012        &quot;def /255 {}def end /BuildChar{exch begin dup 110 ge{Encoding&quot;,\012        &quot;exch get 3 string cvs cvi CharDict /black get}{dup 100 ge {Encoding&quot;,\012        &quot;exch get 3 string cvs cvi CharDict /white get}{Encoding exch get&quot;,\012        &quot;3 string cvs cvi CharDict /numbuild get}ifelse}ifelse exec end&quot;,\012        &quot;}def end /Bitfont newfont definefont 1 scalefont setfont&quot;,\012        NULL})<SUB>182</SUB>> ]
"9784" [label = <(&lt;operator&gt;.notEquals,fontPrologue[i] != NULL)<SUB>206</SUB>> ]
"9793" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>206</SUB>> ]
"9795" [label = <(fprintf,fprintf(fd, &quot;%s\n&quot;, fontPrologue[i]))<SUB>207</SUB>> ]
"9773" [label = <(NULL,NULL)<SUB>204</SUB>> ]
"9781" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>206</SUB>> ]
"9785" [label = <(&lt;operator&gt;.indirectIndexAccess,fontPrologue[i])<SUB>206</SUB>> ]
"9788" [label = <(NULL,NULL)<SUB>206</SUB>> ]
"9798" [label = <(&lt;operator&gt;.indirectIndexAccess,fontPrologue[i])<SUB>207</SUB>> ]
"9775" [label = <(&lt;operator&gt;.cast,(void *)0)<SUB>204</SUB>> ]
"9790" [label = <(&lt;operator&gt;.cast,(void *)0)<SUB>206</SUB>> ]
"9776" [label = <(UNKNOWN,void *,void *)<SUB>204</SUB>> ]
"9791" [label = <(UNKNOWN,void *,void *)<SUB>206</SUB>> ]
"9745" [label = <(METHOD,emitFont)<SUB>180</SUB>> ]
"9801" [label = <(METHOD_RETURN,void)<SUB>180</SUB>> ]
  "9749" -> "9781" 
  "9751" -> "9749" 
  "9784" -> "9801" 
  "9784" -> "9798" 
  "9793" -> "9785" 
  "9795" -> "9793" 
  "9773" -> "9776" 
  "9773" -> "9751" 
  "9781" -> "9785" 
  "9785" -> "9788" 
  "9788" -> "9791" 
  "9788" -> "9784" 
  "9798" -> "9795" 
  "9775" -> "9751" 
  "9790" -> "9784" 
  "9776" -> "9775" 
  "9791" -> "9790" 
  "9745" -> "9773" 
}
