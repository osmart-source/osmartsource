digraph "printruns" {  
"9446" [label = <(&lt;operator&gt;.assignment,WBarr[] = {{'d', 'n', 512}, {'e', 'o', 256}, {'f', 'p', 128},\012                 {'g', 'q', 64},  {'h', 'r', 32},  {'i', 's', 16},\012                 {'j', 't', 8},   {'k', 'u', 4},   {'l', 'v', 2},\012                 {'m', 'w', 1}})<SUB>81</SUB>> ]
"9490" [label = <(&lt;operator&gt;.assignment,*svalue =\012        &quot; !\&quot;#$&amp;'*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abc&quot;)<SUB>85</SUB>> ]
"9494" [label = <(&lt;operator&gt;.assignment,colormode = 1)<SUB>87</SUB>> ]
"9498" [label = <(&lt;operator&gt;.assignment,runlength = 0)<SUB>88</SUB>> ]
"9502" [label = <(&lt;operator&gt;.assignment,n = maxline)<SUB>89</SUB>> ]
"9506" [label = <(&lt;operator&gt;.assignment,x = 0)<SUB>90</SUB>> ]
"9510" [label = <(&lt;operator&gt;.cast,(void)buf)<SUB>93</SUB>> ]
"9513" [label = <(printf,printf(&quot;%d m(&quot;, row++))<SUB>94</SUB>> ]
"9741" [label = <(printf,printf(&quot;)s\n&quot;))<SUB>172</SUB>> ]
"9448" [label = <(&lt;operator&gt;.arrayInitializer,{{'d', 'n', 512}, {'e', 'o', 256}, {'f', 'p', 128},\012                 {'g', 'q', 64},  {'h', 'r', 32},  {'i', 's', 16},\012                 {'j', 't', 8},   {'k', 'u', 4},   {'l', 'v', 2},\012                 {'m', 'w', 1}})<SUB>81</SUB>> ]
"9511" [label = <(UNKNOWN,void,void)<SUB>93</SUB>> ]
"9515" [label = <(&lt;operator&gt;.postIncrement,row++)<SUB>94</SUB>> ]
"9518" [label = <(&lt;operator&gt;.lessThan,runs &lt; erun)<SUB>95</SUB>> ]
"9449" [label = <(&lt;operator&gt;.arrayInitializer,{'d', 'n', 512})<SUB>81</SUB>> ]
"9453" [label = <(&lt;operator&gt;.arrayInitializer,{'e', 'o', 256})<SUB>81</SUB>> ]
"9457" [label = <(&lt;operator&gt;.arrayInitializer,{'f', 'p', 128})<SUB>81</SUB>> ]
"9461" [label = <(&lt;operator&gt;.arrayInitializer,{'g', 'q', 64})<SUB>82</SUB>> ]
"9465" [label = <(&lt;operator&gt;.arrayInitializer,{'h', 'r', 32})<SUB>82</SUB>> ]
"9469" [label = <(&lt;operator&gt;.arrayInitializer,{'i', 's', 16})<SUB>82</SUB>> ]
"9473" [label = <(&lt;operator&gt;.arrayInitializer,{'j', 't', 8})<SUB>83</SUB>> ]
"9477" [label = <(&lt;operator&gt;.arrayInitializer,{'k', 'u', 4})<SUB>83</SUB>> ]
"9481" [label = <(&lt;operator&gt;.arrayInitializer,{'l', 'v', 2})<SUB>83</SUB>> ]
"9485" [label = <(&lt;operator&gt;.arrayInitializer,{'m', 'w', 1})<SUB>84</SUB>> ]
"9564" [label = <(&lt;operator&gt;.assignment,l = 0)<SUB>117</SUB>> ]
"9523" [label = <(&lt;operator&gt;.lessEqualsThan,runlength &lt;= 0)<SUB>97</SUB>> ]
"9568" [label = <(&lt;operator&gt;.greaterThan,runlength &gt; 6)<SUB>118</SUB>> ]
"9619" [label = <(&lt;operator&gt;.logicalAnd,runlength &gt; 0 &amp;&amp; runlength &lt;= 6)<SUB>133</SUB>> ]
"9527" [label = <(&lt;operators&gt;.assignmentXor,colormode ^= 1)<SUB>99</SUB>> ]
"9530" [label = <(&lt;operator&gt;.assignment,runlength = *runs++)<SUB>100</SUB>> ]
"9552" [label = <(&lt;operator&gt;.assignmentPlus,x += runlength)<SUB>103</SUB>> ]
"9620" [label = <(&lt;operator&gt;.greaterThan,runlength &gt; 0)<SUB>133</SUB>> ]
"9623" [label = <(&lt;operator&gt;.lessEqualsThan,runlength &lt;= 6)<SUB>133</SUB>> ]
"9628" [label = <(&lt;operator&gt;.assignment,bitsleft = 6)<SUB>135</SUB>> ]
"9632" [label = <(&lt;operator&gt;.assignment,t = 0)<SUB>136</SUB>> ]
"9532" [label = <(&lt;operator&gt;.indirection,*runs++)<SUB>100</SUB>> ]
"9536" [label = <(&lt;operator&gt;.greaterThan,x + runlength &gt; lastx)<SUB>101</SUB>> ]
"9556" [label = <(&lt;operator&gt;.logicalAnd,!colormode &amp;&amp; runs == erun)<SUB>104</SUB>> ]
"9573" [label = <(&lt;operator&gt;.greaterEqualsThan,runlength &gt;= WBarr[l].width)<SUB>120</SUB>> ]
"9725" [label = <(&lt;operator&gt;.equals,n == 0)<SUB>164</SUB>> ]
"9735" [label = <(putchar,putchar(svalue[t]))<SUB>169</SUB>> ]
"9739" [label = <(&lt;operator&gt;.postDecrement,n--)<SUB>169</SUB>> ]
"9533" [label = <(&lt;operator&gt;.postIncrement,runs++)<SUB>100</SUB>> ]
"9537" [label = <(&lt;operator&gt;.addition,x + runlength)<SUB>101</SUB>> ]
"9542" [label = <(&lt;operator&gt;.assignment,runlength = runs[-1] = lastx - x)<SUB>102</SUB>> ]
"9557" [label = <(&lt;operator&gt;.logicalNot,!colormode)<SUB>104</SUB>> ]
"9559" [label = <(&lt;operator&gt;.equals,runs == erun)<SUB>104</SUB>> ]
"9575" [label = <(&lt;operator&gt;.fieldAccess,WBarr[l].width)<SUB>120</SUB>> ]
"9607" [label = <(&lt;operator&gt;.assignmentMinus,runlength -= WBarr[l].width)<SUB>128</SUB>> ]
"9729" [label = <(putchar,putchar('\n'))<SUB>166</SUB>> ]
"9731" [label = <(&lt;operator&gt;.assignment,n = maxline)<SUB>167</SUB>> ]
"9736" [label = <(&lt;operator&gt;.indirectIndexAccess,svalue[t])<SUB>169</SUB>> ]
"9544" [label = <(&lt;operator&gt;.assignment,runs[-1] = lastx - x)<SUB>102</SUB>> ]
"9576" [label = <(&lt;operator&gt;.indirectIndexAccess,WBarr[l])<SUB>120</SUB>> ]
"9579" [label = <(FIELD_IDENTIFIER,width,width)<SUB>120</SUB>> ]
"9582" [label = <(&lt;operator&gt;.equals,n == 0)<SUB>122</SUB>> ]
"9592" [label = <(putchar,putchar(colormode ? WBarr[l].black : WBarr[l].white))<SUB>127</SUB>> ]
"9605" [label = <(&lt;operator&gt;.postDecrement,n--)<SUB>127</SUB>> ]
"9609" [label = <(&lt;operator&gt;.fieldAccess,WBarr[l].width)<SUB>128</SUB>> ]
"9616" [label = <(&lt;operator&gt;.postIncrement,l++)<SUB>131</SUB>> ]
"9639" [label = <(&lt;operator&gt;.lessEqualsThan,runlength &lt;= bitsleft)<SUB>139</SUB>> ]
"9545" [label = <(&lt;operator&gt;.indirectIndexAccess,runs[-1])<SUB>102</SUB>> ]
"9549" [label = <(&lt;operator&gt;.subtraction,lastx - x)<SUB>102</SUB>> ]
"9586" [label = <(putchar,putchar('\n'))<SUB>124</SUB>> ]
"9588" [label = <(&lt;operator&gt;.assignment,n = maxline)<SUB>125</SUB>> ]
"9593" [label = <(&lt;operator&gt;.conditional,colormode ? WBarr[l].black : WBarr[l].white)<SUB>127</SUB>> ]
"9610" [label = <(&lt;operator&gt;.indirectIndexAccess,WBarr[l])<SUB>128</SUB>> ]
"9613" [label = <(FIELD_IDENTIFIER,width,width)<SUB>128</SUB>> ]
"9659" [label = <(&lt;operator&gt;.assignmentMinus,bitsleft -= runlength)<SUB>143</SUB>> ]
"9662" [label = <(&lt;operator&gt;.assignment,runlength = 0)<SUB>144</SUB>> ]
"9547" [label = <(&lt;operator&gt;.minus,-1)<SUB>102</SUB>> ]
"9595" [label = <(&lt;operator&gt;.fieldAccess,WBarr[l].black)<SUB>127</SUB>> ]
"9600" [label = <(&lt;operator&gt;.fieldAccess,WBarr[l].white)<SUB>127</SUB>> ]
"9644" [label = <(&lt;operator&gt;.logicalAnd,colormode &amp;&amp; 1)<SUB>141</SUB>> ]
"9666" [label = <(&lt;operator&gt;.logicalAnd,bitsleft &amp;&amp; 1)<SUB>145</SUB>> ]
"9718" [label = <(&lt;operator&gt;.assignmentMinus,runlength -= bitsleft)<SUB>160</SUB>> ]
"9721" [label = <(&lt;operator&gt;.assignment,bitsleft = 0)<SUB>161</SUB>> ]
"9596" [label = <(&lt;operator&gt;.indirectIndexAccess,WBarr[l])<SUB>127</SUB>> ]
"9599" [label = <(FIELD_IDENTIFIER,black,black)<SUB>127</SUB>> ]
"9601" [label = <(&lt;operator&gt;.indirectIndexAccess,WBarr[l])<SUB>127</SUB>> ]
"9604" [label = <(FIELD_IDENTIFIER,white,white)<SUB>127</SUB>> ]
"9648" [label = <(&lt;operators&gt;.assignmentOr,t |= ((1 &lt;&lt; runlength) - 1) &lt;&lt; (bitsleft - runlength))<SUB>142</SUB>> ]
"9676" [label = <(&lt;operators&gt;.assignmentXor,colormode ^= 1)<SUB>149</SUB>> ]
"9679" [label = <(&lt;operator&gt;.assignment,runlength = *runs++)<SUB>150</SUB>> ]
"9701" [label = <(&lt;operator&gt;.assignmentPlus,x += runlength)<SUB>153</SUB>> ]
"9707" [label = <(&lt;operator&gt;.logicalAnd,colormode &amp;&amp; 1)<SUB>158</SUB>> ]
"9650" [label = <(&lt;operator&gt;.shiftLeft,((1 &lt;&lt; runlength) - 1) &lt;&lt; (bitsleft - runlength))<SUB>142</SUB>> ]
"9671" [label = <(&lt;operator&gt;.greaterEqualsThan,runs &gt;= erun)<SUB>147</SUB>> ]
"9681" [label = <(&lt;operator&gt;.indirection,*runs++)<SUB>150</SUB>> ]
"9685" [label = <(&lt;operator&gt;.greaterThan,x + runlength &gt; lastx)<SUB>151</SUB>> ]
"9711" [label = <(&lt;operators&gt;.assignmentOr,t |= ((1 &lt;&lt; bitsleft) - 1))<SUB>159</SUB>> ]
"9651" [label = <(&lt;operator&gt;.subtraction,(1 &lt;&lt; runlength) - 1)<SUB>142</SUB>> ]
"9656" [label = <(&lt;operator&gt;.subtraction,bitsleft - runlength)<SUB>142</SUB>> ]
"9682" [label = <(&lt;operator&gt;.postIncrement,runs++)<SUB>150</SUB>> ]
"9686" [label = <(&lt;operator&gt;.addition,x + runlength)<SUB>151</SUB>> ]
"9691" [label = <(&lt;operator&gt;.assignment,runlength = runs[-1] = lastx - x)<SUB>152</SUB>> ]
"9713" [label = <(&lt;operator&gt;.subtraction,(1 &lt;&lt; bitsleft) - 1)<SUB>159</SUB>> ]
"9652" [label = <(&lt;operator&gt;.shiftLeft,1 &lt;&lt; runlength)<SUB>142</SUB>> ]
"9693" [label = <(&lt;operator&gt;.assignment,runs[-1] = lastx - x)<SUB>152</SUB>> ]
"9714" [label = <(&lt;operator&gt;.shiftLeft,1 &lt;&lt; bitsleft)<SUB>159</SUB>> ]
"9694" [label = <(&lt;operator&gt;.indirectIndexAccess,runs[-1])<SUB>152</SUB>> ]
"9698" [label = <(&lt;operator&gt;.subtraction,lastx - x)<SUB>152</SUB>> ]
"9696" [label = <(&lt;operator&gt;.minus,-1)<SUB>152</SUB>> ]
"9439" [label = <(METHOD,printruns)<SUB>74</SUB>> ]
"9743" [label = <(METHOD_RETURN,void)<SUB>74</SUB>> ]
  "9446" -> "9490" 
  "9490" -> "9494" 
  "9494" -> "9498" 
  "9498" -> "9502" 
  "9502" -> "9506" 
  "9506" -> "9511" 
  "9510" -> "9515" 
  "9513" -> "9518" 
  "9741" -> "9743" 
  "9448" -> "9446" 
  "9511" -> "9510" 
  "9515" -> "9513" 
  "9518" -> "9523" 
  "9518" -> "9741" 
  "9449" -> "9453" 
  "9453" -> "9457" 
  "9457" -> "9461" 
  "9461" -> "9465" 
  "9465" -> "9469" 
  "9469" -> "9473" 
  "9473" -> "9477" 
  "9477" -> "9481" 
  "9481" -> "9485" 
  "9485" -> "9448" 
  "9564" -> "9568" 
  "9523" -> "9527" 
  "9523" -> "9564" 
  "9568" -> "9576" 
  "9568" -> "9620" 
  "9619" -> "9518" 
  "9619" -> "9628" 
  "9527" -> "9533" 
  "9530" -> "9537" 
  "9552" -> "9557" 
  "9620" -> "9619" 
  "9620" -> "9623" 
  "9623" -> "9619" 
  "9628" -> "9632" 
  "9632" -> "9639" 
  "9632" -> "9725" 
  "9532" -> "9530" 
  "9536" -> "9547" 
  "9536" -> "9552" 
  "9556" -> "9741" 
  "9556" -> "9564" 
  "9573" -> "9582" 
  "9573" -> "9616" 
  "9725" -> "9729" 
  "9725" -> "9736" 
  "9735" -> "9739" 
  "9739" -> "9620" 
  "9533" -> "9532" 
  "9537" -> "9536" 
  "9542" -> "9552" 
  "9557" -> "9556" 
  "9557" -> "9559" 
  "9559" -> "9556" 
  "9575" -> "9573" 
  "9607" -> "9568" 
  "9729" -> "9731" 
  "9731" -> "9736" 
  "9736" -> "9735" 
  "9544" -> "9542" 
  "9576" -> "9579" 
  "9579" -> "9575" 
  "9582" -> "9586" 
  "9582" -> "9596" 
  "9582" -> "9601" 
  "9592" -> "9605" 
  "9605" -> "9610" 
  "9609" -> "9607" 
  "9616" -> "9568" 
  "9639" -> "9644" 
  "9639" -> "9707" 
  "9545" -> "9549" 
  "9549" -> "9544" 
  "9586" -> "9588" 
  "9588" -> "9596" 
  "9588" -> "9601" 
  "9593" -> "9592" 
  "9610" -> "9613" 
  "9613" -> "9609" 
  "9659" -> "9662" 
  "9662" -> "9666" 
  "9547" -> "9545" 
  "9595" -> "9593" 
  "9600" -> "9593" 
  "9644" -> "9652" 
  "9644" -> "9659" 
  "9666" -> "9639" 
  "9666" -> "9725" 
  "9666" -> "9671" 
  "9718" -> "9721" 
  "9721" -> "9639" 
  "9721" -> "9725" 
  "9596" -> "9599" 
  "9599" -> "9595" 
  "9601" -> "9604" 
  "9604" -> "9600" 
  "9648" -> "9659" 
  "9676" -> "9682" 
  "9679" -> "9686" 
  "9701" -> "9639" 
  "9701" -> "9725" 
  "9707" -> "9714" 
  "9707" -> "9718" 
  "9650" -> "9648" 
  "9671" -> "9725" 
  "9671" -> "9676" 
  "9681" -> "9679" 
  "9685" -> "9696" 
  "9685" -> "9701" 
  "9711" -> "9718" 
  "9651" -> "9656" 
  "9656" -> "9650" 
  "9682" -> "9681" 
  "9686" -> "9685" 
  "9691" -> "9701" 
  "9713" -> "9711" 
  "9652" -> "9651" 
  "9693" -> "9691" 
  "9714" -> "9713" 
  "9694" -> "9698" 
  "9698" -> "9693" 
  "9696" -> "9694" 
  "9439" -> "9449" 
}
