digraph "ToRationalEuclideanGCD" {  
"70861" [label = <(&lt;operator&gt;.assignment,numSum[3] = {0, 1, 0})<SUB>2527</SUB>> ]
"70867" [label = <(&lt;operator&gt;.assignment,denomSum[3] = {1, 0, 0})<SUB>2527</SUB>> ]
"70903" [label = <(&lt;operator&gt;.assignment,fMax = (double)nMax)<SUB>2550</SUB>> ]
"70927" [label = <(&lt;operator&gt;.assignment,bigDenom = 1)<SUB>2579</SUB>> ]
"70950" [label = <(&lt;operator&gt;.assignment,bigNum = (uint64_t)value)<SUB>2585</SUB>> ]
"71126" [label = <(&lt;operator&gt;.assignment,*ullNum = numSum[1])<SUB>2638</SUB>> ]
"71132" [label = <(&lt;operator&gt;.assignment,*ullDenom = denomSum[1])<SUB>2639</SUB>> ]
"70863" [label = <(&lt;operator&gt;.arrayInitializer,{0, 1, 0})<SUB>2527</SUB>> ]
"70869" [label = <(&lt;operator&gt;.arrayInitializer,{1, 0, 0})<SUB>2527</SUB>> ]
"70882" [label = <(&lt;operator&gt;.logicalAnd,blnUseSmallRange &amp;&amp; 1)<SUB>2542</SUB>> ]
"70905" [label = <(&lt;operator&gt;.cast,(double)nMax)<SUB>2550</SUB>> ]
"70909" [label = <(&lt;operator&gt;.logicalAnd,blnUseSignedRange &amp;&amp; 1)<SUB>2558</SUB>> ]
"70931" [label = <(&lt;operator&gt;.logicalAnd,(value != floor(value)) &amp;&amp; (value &lt; fMax) &amp;&amp; (bigDenom &lt; nMax))<SUB>2580</SUB>> ]
"70952" [label = <(&lt;operator&gt;.cast,(uint64_t)value)<SUB>2585</SUB>> ]
"70960" [label = <(&lt;operator&gt;.lessThan,i &lt; MAX_ITERATIONS)<SUB>2590</SUB>> ]
"70965" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>2590</SUB>> ]
"71096" [label = <(&lt;operator&gt;.logicalOr,numSum[1] &gt; returnLimit || denomSum[1] &gt; returnLimit)<SUB>2631</SUB>> ]
"71127" [label = <(&lt;operator&gt;.indirection,*ullNum)<SUB>2638</SUB>> ]
"71129" [label = <(&lt;operator&gt;.indirectIndexAccess,numSum[1])<SUB>2638</SUB>> ]
"71133" [label = <(&lt;operator&gt;.indirection,*ullDenom)<SUB>2639</SUB>> ]
"71135" [label = <(&lt;operator&gt;.indirectIndexAccess,denomSum[1])<SUB>2639</SUB>> ]
"70886" [label = <(&lt;operator&gt;.assignment,nMax = (uint64_t)((2147483647 - 1) / 2))<SUB>2544</SUB>> ]
"70906" [label = <(UNKNOWN,double,double)<SUB>2550</SUB>> ]
"70913" [label = <(&lt;operator&gt;.assignment,maxDenom = 2147483647UL)<SUB>2560</SUB>> ]
"70916" [label = <(&lt;operator&gt;.assignment,returnLimit = maxDenom)<SUB>2561</SUB>> ]
"70932" [label = <(&lt;operator&gt;.logicalAnd,(value != floor(value)) &amp;&amp; (value &lt; fMax))<SUB>2580</SUB>> ]
"70940" [label = <(&lt;operator&gt;.lessThan,bigDenom &lt; nMax)<SUB>2580</SUB>> ]
"70944" [label = <(&lt;operators&gt;.assignmentShiftLeft,bigDenom &lt;&lt;= 1)<SUB>2582</SUB>> ]
"70947" [label = <(&lt;operator&gt;.assignmentMultiplication,value *= 2)<SUB>2583</SUB>> ]
"70953" [label = <(UNKNOWN,uint64_t,uint64_t)<SUB>2585</SUB>> ]
"70957" [label = <(&lt;operator&gt;.assignment,i = 0)<SUB>2590</SUB>> ]
"70962" [label = <(MAX_ITERATIONS,MAX_ITERATIONS)<SUB>2590</SUB>> ]
"70975" [label = <(&lt;operator&gt;.assignment,val = bigNum / bigDenom)<SUB>2598</SUB>> ]
"70980" [label = <(&lt;operator&gt;.assignment,aux = bigNum)<SUB>2602</SUB>> ]
"70983" [label = <(&lt;operator&gt;.assignment,bigNum = bigDenom)<SUB>2603</SUB>> ]
"70986" [label = <(&lt;operator&gt;.assignment,bigDenom = aux % bigDenom)<SUB>2604</SUB>> ]
"70991" [label = <(&lt;operator&gt;.assignment,aux = val)<SUB>2607</SUB>> ]
"71041" [label = <(&lt;operator&gt;.assignment,numSum[2] = aux * numSum[1] + numSum[0])<SUB>2619</SUB>> ]
"71054" [label = <(&lt;operator&gt;.assignment,numSum[0] = numSum[1])<SUB>2620</SUB>> ]
"71061" [label = <(&lt;operator&gt;.assignment,numSum[1] = numSum[2])<SUB>2621</SUB>> ]
"71068" [label = <(&lt;operator&gt;.assignment,denomSum[2] = aux * denomSum[1] + denomSum[0])<SUB>2624</SUB>> ]
"71081" [label = <(&lt;operator&gt;.assignment,denomSum[0] = denomSum[1])<SUB>2625</SUB>> ]
"71088" [label = <(&lt;operator&gt;.assignment,denomSum[1] = denomSum[2])<SUB>2626</SUB>> ]
"71097" [label = <(&lt;operator&gt;.greaterThan,numSum[1] &gt; returnLimit)<SUB>2631</SUB>> ]
"71102" [label = <(&lt;operator&gt;.greaterThan,denomSum[1] &gt; returnLimit)<SUB>2631</SUB>> ]
"71108" [label = <(&lt;operator&gt;.assignment,numSum[1] = numSum[1] / 2)<SUB>2633</SUB>> ]
"71117" [label = <(&lt;operator&gt;.assignment,denomSum[1] = denomSum[1] / 2)<SUB>2634</SUB>> ]
"70888" [label = <(uint64_t,(uint64_t)((2147483647 - 1) / 2))<SUB>2544</SUB>> ]
"70896" [label = <(&lt;operator&gt;.assignment,nMax = ((9223372036854775807 - 1) / 2))<SUB>2548</SUB>> ]
"70921" [label = <(&lt;operator&gt;.assignment,maxDenom = 0xFFFFFFFFUL)<SUB>2565</SUB>> ]
"70924" [label = <(&lt;operator&gt;.assignment,returnLimit = maxDenom)<SUB>2566</SUB>> ]
"70933" [label = <(&lt;operator&gt;.notEquals,value != floor(value))<SUB>2580</SUB>> ]
"70937" [label = <(&lt;operator&gt;.lessThan,value &lt; fMax)<SUB>2580</SUB>> ]
"70970" [label = <(&lt;operator&gt;.equals,bigDenom == 0)<SUB>2594</SUB>> ]
"70977" [label = <(&lt;operator&gt;.division,bigNum / bigDenom)<SUB>2598</SUB>> ]
"70988" [label = <(&lt;operator&gt;.modulo,aux % bigDenom)<SUB>2604</SUB>> ]
"70995" [label = <(&lt;operator&gt;.greaterEqualsThan,denomSum[1] * val + denomSum[0] &gt;= maxDenom)<SUB>2608</SUB>> ]
"71042" [label = <(&lt;operator&gt;.indirectIndexAccess,numSum[2])<SUB>2619</SUB>> ]
"71045" [label = <(&lt;operator&gt;.addition,aux * numSum[1] + numSum[0])<SUB>2619</SUB>> ]
"71055" [label = <(&lt;operator&gt;.indirectIndexAccess,numSum[0])<SUB>2620</SUB>> ]
"71058" [label = <(&lt;operator&gt;.indirectIndexAccess,numSum[1])<SUB>2620</SUB>> ]
"71062" [label = <(&lt;operator&gt;.indirectIndexAccess,numSum[1])<SUB>2621</SUB>> ]
"71065" [label = <(&lt;operator&gt;.indirectIndexAccess,numSum[2])<SUB>2621</SUB>> ]
"71069" [label = <(&lt;operator&gt;.indirectIndexAccess,denomSum[2])<SUB>2624</SUB>> ]
"71072" [label = <(&lt;operator&gt;.addition,aux * denomSum[1] + denomSum[0])<SUB>2624</SUB>> ]
"71082" [label = <(&lt;operator&gt;.indirectIndexAccess,denomSum[0])<SUB>2625</SUB>> ]
"71085" [label = <(&lt;operator&gt;.indirectIndexAccess,denomSum[1])<SUB>2625</SUB>> ]
"71089" [label = <(&lt;operator&gt;.indirectIndexAccess,denomSum[1])<SUB>2626</SUB>> ]
"71092" [label = <(&lt;operator&gt;.indirectIndexAccess,denomSum[2])<SUB>2626</SUB>> ]
"71098" [label = <(&lt;operator&gt;.indirectIndexAccess,numSum[1])<SUB>2631</SUB>> ]
"71103" [label = <(&lt;operator&gt;.indirectIndexAccess,denomSum[1])<SUB>2631</SUB>> ]
"71109" [label = <(&lt;operator&gt;.indirectIndexAccess,numSum[1])<SUB>2633</SUB>> ]
"71112" [label = <(&lt;operator&gt;.division,numSum[1] / 2)<SUB>2633</SUB>> ]
"71118" [label = <(&lt;operator&gt;.indirectIndexAccess,denomSum[1])<SUB>2634</SUB>> ]
"71121" [label = <(&lt;operator&gt;.division,denomSum[1] / 2)<SUB>2634</SUB>> ]
"70889" [label = <(&lt;operator&gt;.division,(2147483647 - 1) / 2)<SUB>2544</SUB>> ]
"70898" [label = <(&lt;operator&gt;.division,(9223372036854775807 - 1) / 2)<SUB>2548</SUB>> ]
"70935" [label = <(floor,floor(value))<SUB>2580</SUB>> ]
"70996" [label = <(&lt;operator&gt;.addition,denomSum[1] * val + denomSum[0])<SUB>2608</SUB>> ]
"71007" [label = <(&lt;operator&gt;.assignment,aux = (maxDenom - denomSum[0]) / denomSum[1])<SUB>2610</SUB>> ]
"71046" [label = <(&lt;operator&gt;.multiplication,aux * numSum[1])<SUB>2619</SUB>> ]
"71051" [label = <(&lt;operator&gt;.indirectIndexAccess,numSum[0])<SUB>2619</SUB>> ]
"71073" [label = <(&lt;operator&gt;.multiplication,aux * denomSum[1])<SUB>2624</SUB>> ]
"71078" [label = <(&lt;operator&gt;.indirectIndexAccess,denomSum[0])<SUB>2624</SUB>> ]
"71113" [label = <(&lt;operator&gt;.indirectIndexAccess,numSum[1])<SUB>2633</SUB>> ]
"71122" [label = <(&lt;operator&gt;.indirectIndexAccess,denomSum[1])<SUB>2634</SUB>> ]
"70890" [label = <(&lt;operator&gt;.subtraction,2147483647 - 1)<SUB>2544</SUB>> ]
"70899" [label = <(&lt;operator&gt;.subtraction,9223372036854775807 - 1)<SUB>2548</SUB>> ]
"70997" [label = <(&lt;operator&gt;.multiplication,denomSum[1] * val)<SUB>2608</SUB>> ]
"71002" [label = <(&lt;operator&gt;.indirectIndexAccess,denomSum[0])<SUB>2608</SUB>> ]
"71009" [label = <(&lt;operator&gt;.division,(maxDenom - denomSum[0]) / denomSum[1])<SUB>2610</SUB>> ]
"71019" [label = <(&lt;operator&gt;.logicalOr,aux * 2 &gt;= val || denomSum[1] &gt;= maxDenom)<SUB>2611</SUB>> ]
"71048" [label = <(&lt;operator&gt;.indirectIndexAccess,numSum[1])<SUB>2619</SUB>> ]
"71075" [label = <(&lt;operator&gt;.indirectIndexAccess,denomSum[1])<SUB>2624</SUB>> ]
"70998" [label = <(&lt;operator&gt;.indirectIndexAccess,denomSum[1])<SUB>2608</SUB>> ]
"71010" [label = <(&lt;operator&gt;.subtraction,maxDenom - denomSum[0])<SUB>2610</SUB>> ]
"71015" [label = <(&lt;operator&gt;.indirectIndexAccess,denomSum[1])<SUB>2610</SUB>> ]
"71020" [label = <(&lt;operator&gt;.greaterEqualsThan,aux * 2 &gt;= val)<SUB>2611</SUB>> ]
"71025" [label = <(&lt;operator&gt;.greaterEqualsThan,denomSum[1] &gt;= maxDenom)<SUB>2611</SUB>> ]
"71031" [label = <(&lt;operator&gt;.assignment,i = (MAX_ITERATIONS +\012                     1))<SUB>2612</SUB>> ]
"71012" [label = <(&lt;operator&gt;.indirectIndexAccess,denomSum[0])<SUB>2610</SUB>> ]
"71021" [label = <(&lt;operator&gt;.multiplication,aux * 2)<SUB>2611</SUB>> ]
"71026" [label = <(&lt;operator&gt;.indirectIndexAccess,denomSum[1])<SUB>2611</SUB>> ]
"71033" [label = <(MAX_ITERATIONS,MAX_ITERATIONS +\012                     1)<SUB>2612</SUB>> ]
"71035" [label = <(&lt;operator&gt;.addition,64 + 1)<SUB>2612</SUB>> ]
"70852" [label = <(METHOD,ToRationalEuclideanGCD)<SUB>2520</SUB>> ]
"71138" [label = <(METHOD_RETURN,void)<SUB>2520</SUB>> ]
  "70861" -> "70869" 
  "70867" -> "70882" 
  "70903" -> "70909" 
  "70927" -> "70935" 
  "70950" -> "70957" 
  "71126" -> "71133" 
  "71132" -> "71138" 
  "70863" -> "70861" 
  "70869" -> "70867" 
  "70882" -> "70890" 
  "70882" -> "70899" 
  "70905" -> "70903" 
  "70909" -> "70913" 
  "70909" -> "70921" 
  "70931" -> "70944" 
  "70931" -> "70953" 
  "70952" -> "70950" 
  "70960" -> "70970" 
  "70960" -> "71098" 
  "70965" -> "70962" 
  "71096" -> "71109" 
  "71096" -> "71127" 
  "71127" -> "71129" 
  "71129" -> "71126" 
  "71133" -> "71135" 
  "71135" -> "71132" 
  "70886" -> "70906" 
  "70906" -> "70905" 
  "70913" -> "70916" 
  "70916" -> "70927" 
  "70932" -> "70931" 
  "70932" -> "70940" 
  "70940" -> "70931" 
  "70944" -> "70947" 
  "70947" -> "70935" 
  "70953" -> "70952" 
  "70957" -> "70962" 
  "70962" -> "70960" 
  "70975" -> "70980" 
  "70980" -> "70983" 
  "70983" -> "70988" 
  "70986" -> "70991" 
  "70991" -> "70998" 
  "71041" -> "71055" 
  "71054" -> "71062" 
  "71061" -> "71069" 
  "71068" -> "71082" 
  "71081" -> "71089" 
  "71088" -> "70965" 
  "71097" -> "71096" 
  "71097" -> "71103" 
  "71102" -> "71096" 
  "71108" -> "71118" 
  "71117" -> "71098" 
  "70888" -> "70886" 
  "70896" -> "70906" 
  "70921" -> "70924" 
  "70924" -> "70927" 
  "70933" -> "70932" 
  "70933" -> "70937" 
  "70937" -> "70932" 
  "70970" -> "71098" 
  "70970" -> "70977" 
  "70977" -> "70975" 
  "70988" -> "70986" 
  "70995" -> "71012" 
  "70995" -> "71042" 
  "71042" -> "71048" 
  "71045" -> "71041" 
  "71055" -> "71058" 
  "71058" -> "71054" 
  "71062" -> "71065" 
  "71065" -> "71061" 
  "71069" -> "71075" 
  "71072" -> "71068" 
  "71082" -> "71085" 
  "71085" -> "71081" 
  "71089" -> "71092" 
  "71092" -> "71088" 
  "71098" -> "71097" 
  "71103" -> "71102" 
  "71109" -> "71113" 
  "71112" -> "71108" 
  "71118" -> "71122" 
  "71121" -> "71117" 
  "70889" -> "70888" 
  "70898" -> "70896" 
  "70935" -> "70933" 
  "70996" -> "70995" 
  "71007" -> "71021" 
  "71046" -> "71051" 
  "71051" -> "71045" 
  "71073" -> "71078" 
  "71078" -> "71072" 
  "71113" -> "71112" 
  "71122" -> "71121" 
  "70890" -> "70889" 
  "70899" -> "70898" 
  "70997" -> "71002" 
  "71002" -> "70996" 
  "71009" -> "71007" 
  "71019" -> "71033" 
  "71019" -> "71098" 
  "71048" -> "71046" 
  "71075" -> "71073" 
  "70998" -> "70997" 
  "71010" -> "71015" 
  "71015" -> "71009" 
  "71020" -> "71019" 
  "71020" -> "71026" 
  "71025" -> "71019" 
  "71031" -> "71042" 
  "71012" -> "71010" 
  "71021" -> "71020" 
  "71026" -> "71025" 
  "71033" -> "71031" 
  "71033" -> "71035" 
  "71035" -> "71031" 
  "70852" -> "70863" 
}
